(window.webpackJsonp=window.webpackJsonp||[]).push([[50],{1187:function(t,e,n){"use strict";var r=c(n(1)),o=c(n(15)),i=n(2573),a=c(n(2575)),u=function(t){if(t&&t.__esModule)return t;var e={};if(null!=t)for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n]);return e.default=t,e}(n(2576)),s=c(n(607));function c(t){return t&&t.__esModule?t:{default:t}}function l(t,e,n){var r=t,o=r.color_picker,a=e.data.features.map(function(t){return Object.assign({},t,{color:[o.r,o.g,o.b,255*o.a]})});r.js_data_mutator&&(a=(0,s.default)(r.js_data_mutator)(a));return new i.HexagonLayer(Object.assign({id:"hex-layer-"+r.slice_id,data:a,pickable:!0,radius:r.grid_size,minColor:[0,0,0,0],extruded:r.extruded,maxColor:[o.r,o.g,o.b,255*o.a],outline:!1,getElevationValue:function(){return function(t){return t.reduce(function(t,e){return t+e.weight},0)}}(),getColorValue:function(){return function(t){return t.reduce(function(t,e){return t+e.weight},0)}}()},u.commonLayerProps(r,n)))}t.exports={default:function(t,e,n){var i=l(t.formData,e,t),s=Object.assign({},t.formData.viewport,{width:t.width(),height:t.height()});t.formData.autozoom&&(s=u.fitViewport(s,function(t){return t.map(function(t){return t.position})}(e.data.features))),o.default.render(r.default.createElement(a.default,{mapboxApiAccessToken:e.data.mapboxApiKey,viewport:s,layers:[i],mapStyle:t.formData.mapbox_style,setControlValue:n}),document.getElementById(t.containerId))},getLayer:l}},2575:function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var r=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(t[r]=n[r])}return t},o=function(){function t(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}return function(e,n,r){return n&&t(e.prototype,n),r&&t(e,r),e}}(),i=c(n(1)),a=c(n(0)),u=c(n(2583)),s=c(n(2573));function c(t){return t&&t.__esModule?t:{default:t}}n(2584);var l={viewport:a.default.object.isRequired,layers:a.default.array.isRequired,setControlValue:a.default.func.isRequired,mapStyle:a.default.string,mapboxApiAccessToken:a.default.string.isRequired,onViewportChange:a.default.func},f={mapStyle:"light",onViewportChange:function(){return function(){}}()},p=function(t){function e(t){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e);var n=function(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}(this,(e.__proto__||Object.getPrototypeOf(e)).call(this,t));return n.state={viewport:t.viewport},n.tick=n.tick.bind(n),n.onViewportChange=n.onViewportChange.bind(n),n}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}(e,i["default"].Component),o(e,[{key:"componentWillMount",value:function(){return function(){var t=setInterval(this.tick,1e3);this.setState(function(){return{timer:t}})}}()},{key:"componentWillReceiveProps",value:function(){return function(t){var e=this;this.setState(function(){return{viewport:Object.assign({},t.viewport),previousViewport:e.state.viewport}})}}()},{key:"componentWillUnmount",value:function(){return function(){this.clearInterval(this.state.timer)}}()},{key:"onViewportChange",value:function(){return function(t){var e=Object.assign({},t);delete e.width,delete e.height;var n=Object.assign({},this.state.viewport,e);this.setState(function(){return{viewport:n}}),this.props.onViewportChange(n)}}()},{key:"tick",value:function(){return function(){var t=this;if(this.state.previousViewport!==this.state.viewport){var e=this.props.setControlValue,n=this.state.viewport;e&&e("viewport",n),this.setState(function(){return{previousViewport:t.state.viewport}})}}}()},{key:"layers",value:function(){return function(){return this.props.layers.some(function(t){return"function"==typeof t})?this.props.layers.map(function(t){return"function"==typeof t?t():t}):this.props.layers}}()},{key:"render",value:function(){return function(){var t=this.state.viewport;return i.default.createElement(u.default,r({},t,{mapStyle:this.props.mapStyle,onViewportChange:this.onViewportChange,mapboxApiAccessToken:this.props.mapboxApiAccessToken}),i.default.createElement(s.default,r({},t,{layers:this.layers(),initWebGLParameters:!0})))}}()}]),e}();e.default=p,p.propTypes=l,p.defaultProps=f},2576:function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.getBounds=u,e.fitViewport=function(t,e){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:10;try{var r=u(e);return Object.assign({},t,(0,o.fitBounds)({height:t.height,width:t.width,padding:n,bounds:r}))}catch(e){return console.error("Could not auto zoom",e),t}},e.commonLayerProps=function(t,e){var n=t,o=void 0;if(n.js_tooltip){var a=(0,i.default)(n.js_tooltip);o=function(){return function(t){t.picked?e.setTooltip({content:r.default.sanitize(a(t)),x:t.x,y:t.y}):e.setTooltip(null)}}()}var u=void 0;n.js_onclick_href&&(u=function(){return function(t){var e=(0,i.default)(n.js_onclick_href)(t);window.open(e)}}());return{onClick:u,onHover:o,pickable:Boolean(o)}};var r=a(n(2580)),o=n(2578),i=a(n(607));function a(t){return t&&t.__esModule?t:{default:t}}function u(t){var e=d3.extent(t,function(t){return t[1]}),n=d3.extent(t,function(t){return t[0]});return[[n[0],e[0]],[n[1],e[1]]]}}}]);