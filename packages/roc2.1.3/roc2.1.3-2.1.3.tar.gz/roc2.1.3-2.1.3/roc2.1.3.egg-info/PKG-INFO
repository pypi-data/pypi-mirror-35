Metadata-Version: 2.1
Name: roc2.1.3
Version: 2.1.3
Summary: just a simple test of vipkid
Home-page: UNKNOWN
Author: yin
Author-email: yinmengmeng@vipkid.com.cn
License: MIT
Description: ####
        
        运行办法：
           
            环境：python2    
            运行前先安装ROC,transform和conRoc,安装办法：
            pip install roc2.1.2
        
        
            roc:
                输入：文件夹truth（标注结果文件夹）,test（模型输出的结果文件夹）,result(要保存的txt文本文档路径），roc(要保存的图片路径）
                python 
                        from ROC import roc
                        roc.roc("truth","test","result","roc")
                输出：roc和分数折线图,结果的文本文档
                PS:result 和roc不带格式（例：'D:\\python_work\\result')
        
        
            drawpic:
                输入：文件夹pre_file(需要绘图的txt所在的文件夹）,image(要保存的图片路径）,titlestr(图片标题）
                python 
                        from ROC import conRoc
                        conRoc.conRoc("pre_file","image","titlestr")
                输出：roc折线图
                PS:image不带格式（例：'D:\\python_work\\image') 
             
           
            txt2xml:
                输入：txt_file(txt格式标注信息所存放文件夹）
                python
                        from transform import txt2xml
                        txt2xml.txt2xml("txt_file","xml_file")
                输出：xml_file(xml格式标注信息所存放文件夹）  
         
        
            xml2txt:
                输入：xml_file(xml格式标注信息所存放文件夹）
                python
                        from transform import xml2txt
                        xml2txt.xml2txt("xml_file","txt_file")
                输出：txt_file(txt格式标注信息所存放文件夹）
          
        
            DataOfRoc:
                输入：文件夹truth（标注结果文件夹）,test（模型输出的结果文件夹）
                python 
                        from ROC import DataOfRoc
                        DataOfRoc.DataOfRoc("truth","test")
                输出：tp（误读个数）,pos（实际正确个数）,rate（召回率）
              
        
            IOU：
                输入：Reframe,GTframe(两个列表，内容为矩形的定点坐标Xmin,Ymin,Xmax,Ymax)
                python
                        from ROC import IOU
                        IOU.IOU(Reframe,GTframe)
                输出：ratio(两长方形面积重叠比率）
          
        
            scoreRoc：
                输入：listdata(数据列表:每组数据wei:[是否错误（1/0）,是否正确（1/0）,score]）,result(要保存的txt文本文档路径），roc(要保存的图片路径）
                python 
                        from ROC import scoreRoc
                        scoreRoc.scoreRoc(listdata,"result","roc")
                输出：roc和分数折线图,结果的文本文档
                PS:result 和roc不带格式（例：'D:\\python_work\\result')
        
        
            nms：
                输入：
                python
                        from nms import nms
                        nms.nms()
                输出：
        
        
        
        
        
        文件夹说明：
        
        transform文件夹：
        
        txt2xml ：将txt格式文本转换为xml文件（每个txt文件转换为一个xml文件）
                  需要转换的所有txt文件放在txt_file中，转换后的xml文件存放在xml_file中 
        
        xml2txt ：将xml格式文本转换为txt文件（每个xml文件转换为一个txt文件）
                  需要转换的所有xml文件放在xml_file中，转换后的txt文件存放在txt_file中                   
        
          
        ROC文件夹：
        
        roc: 绘制roc曲线和分数曲线并计算acu。数据来源于db列表
        
        IOU: 计算两矩形IOU,传入数据为每个矩形两条对角线的横纵坐标Reframe=[X1,Y1,X2,Y2],GTframe=[X1,Y1,X2,Y2]。
        
        read:读取xml文件的所有标注的标签数据(xmin,ymin,xmax,ymax)。传入数据为待测试xml文档的元素对象。
        
        Analyze：解析xml文件并得出IOU比对中比对错误(重叠比率小于0.5）和比对正确的个数。
                 输入：truth为标准xml文件所在的文件夹，test为待比对的xml文件所在的文件夹。
        
        scoreRoc：根据列表数据，绘制roc曲线
                  列表每组数据为[wrong,right,score] wrong与right为误读和正确的标识，值为1/0，score来源于xml文件
        
        DataOfRoc:比较两个文件夹中的xml文件，并计算出误读个数，实际正确个数，和召回率
        
        drawpic:根据两个文件夹中txt文件画roc曲线图。每个txt文件对应颜色相同的两条曲线（召回率曲线和分数曲线）
        
        
        ####
        
                              
                        
           
        
Keywords: simple,test
Platform: any
Description-Content-Type: text/markdown
