swagger: '2.0'
x-endpoint-name: iam
x-releases: PUBLIC
info:
  version: 0.1-SNAPSHOT
  title: Cloudera IAM Service
  license:
    name: Apache 2.0
  description: Cloudera Altus IAM is a web service that you can use to manage users and user permissions under your Altus account.
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json
paths:
  /iam/getUser:
    post:
      summary: Gets information on a user.
      description: Gets information on a user. If no user name is specified. The user name is determined from the access key used to make the request.
      operationId: getUser
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetUserRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/GetUserResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /iam/listUsers:
    post:
      summary: Lists users.
      description: Lists users.
      operationId: listUsers
      x-right: iam/listUsers
      x-paginates: true
      x-paging-default-max-items: 100
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListUsersRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/ListUsersResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /iam/createUserAccessKey:
    post:
      summary: Creates a new access key for a user.
      description: Creates a new access key for a user.
      operationId: createUserAccessKey
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateUserAccessKeyRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/CreateUserAccessKeyResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /iam/createMachineUserAccessKey:
    post:
      summary: Creates a new access key for a machine user.
      description: Creates a new access key for a machine user.
      operationId: createMachineUserAccessKey
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateMachineUserAccessKeyRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/CreateMachineUserAccessKeyResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /iam/deleteAccessKey:
    post:
      summary: Deletes an access key.
      description: Deletes an access key.
      operationId: deleteAccessKey
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteAccessKeyRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/DeleteAccessKeyResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /iam/updateAccessKey:
    post:
      summary: Updates an access key.
      description: Updates an access key.
      operationId: updateAccessKey
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateAccessKeyRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/UpdateAccessKeyResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /iam/getAccessKey:
    post:
      summary: Gets information on an access key.
      description: Gets information on an access key. If no access key ID is specified. Information on the access key used to make the request is returned.
      operationId: getAccessKey
      x-right: iam/getAccessKey
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetAccessKeyRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/GetAccessKeyResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /iam/listAccessKeys:
    post:
      summary: Lists access keys.
      description: Lists access keys.
      operationId: listAccessKeys
      x-right: iam/listAccessKeys
      x-paginates: true
      x-paging-default-max-items: 100
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListAccessKeysRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/ListAccessKeysResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /iam/listRoles:
    post:
      summary: Lists all the available roles.
      description: Lists all the available roles. Roles grant rights to users via policies that are attached to the roles.
      operationId: listRoles
      x-right: iam/listRoles
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListRolesRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/ListRolesResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /iam/listResourceRoles:
    post:
      summary: Lists all the available resource roles.
      description: Lists all the available reource roles. Resource roles grants rights over certain resources.
      operationId: listResourceRoles
      x-right: iam/listResourceRoles
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListResourceRolesRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/ListResourceRolesResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /iam/assignUserRole:
    post:
      summary: Assign a role to a user.
      description: Assign a role to a user. If the role is already assigned to the user the request will fail.
      operationId: assignUserRole
      x-right: iam/assignRole
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/AssignUserRoleRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/AssignUserRoleResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /iam/unassignUserRole:
    post:
      summary: Unassign a role from a user.
      description: Unassign a role from a user. If the role is not currently assigned to the user the request will fail.
      operationId: unassignUserRole
      x-right: iam/unassignRole
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/UnassignUserRoleRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/UnassignUserRoleResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /iam/assignUserResourceRole:
    post:
      summary: Assign a resource role to a user.
      description: Assign a resource role to a user. If the resource role is already assigned to the user the request will fail.
      operationId: assignUserResourceRole
      x-right: iam/assignResourceRole
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/AssignUserResourceRoleRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/AssignUserResourceRoleResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /iam/unassignUserResourceRole:
    post:
      summary: Unassign a resource role from a user.
      description: Unassign a resource role from a user. If the resource role is not currently assigned to the user the request will fail.
      operationId: unassignUserResourceRole
      x-right: iam/unassignResourceRole
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/UnassignUserResourceRoleRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/UnassignUserResourceRoleResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /iam/listUserAssignedRoles:
    post:
      summary: Lists the user's assigned roles.
      description: Lists the user's assigned roles.
      operationId: listUserAssignedRoles
      x-right: iam/listAssignedRoles
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListUserAssignedRolesRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/ListUserAssignedRolesResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /iam/listUserAssignedResourceRoles:
    post:
      summary: Lists a user's assigned resource roles.
      description: Lists a user's assigned resource roles.
      operationId: listUserAssignedResourceRoles
      x-right: iam/listAssignedResourceRoles
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListUserAssignedResourceRolesRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/ListUserAssignedResourceRolesResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /iam/assignMachineUserRole:
    post:
      summary: Assign a role to a machine user.
      description: Assign a role to a machine user. If the role is already assigned to the machine user the request will fail.
      operationId: assignMachineUserRole
      x-right: iam/assignRole
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/AssignMachineUserRoleRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/AssignMachineUserRoleResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /iam/unassignMachineUserRole:
    post:
      summary: Unassign a role from a machine user.
      description: Unassign a role from a machine user. If the role is not currently assigned to the machine user the request will fail.
      operationId: unassignMachineUserRole
      x-right: iam/unassignRole
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/UnassignMachineUserRoleRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/UnassignMachineUserRoleResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /iam/assignMachineUserResourceRole:
    post:
      summary: Assign a resource role to a machine user.
      description: Assign a resource role to a machine user. If the resource role is already assigned to the machine user the request will fail.
      operationId: assignMachineUserResourceRole
      x-right: iam/assignResourceRole
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/AssignMachineUserResourceRoleRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/AssignMachineUserResourceRoleResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /iam/unassignMachineUserResourceRole:
    post:
      summary: Unassign a resource role from a machine user.
      description: Unassign a resource role from a machine user. If the resource role is not currently assigned to the machine user the request will fail.
      operationId: unassignMachineUserResourceRole
      x-right: iam/unassignResourceRole
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/UnassignMachineUserResourceRoleRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/UnassignMachineUserResourceRoleResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /iam/listMachineUserAssignedRoles:
    post:
      summary: Lists the machine user's assigned roles.
      description: Lists the machine user's assigned roles.
      operationId: listMachineUserAssignedRoles
      x-right: iam/listAssignedRoles
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListMachineUserAssignedRolesRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/ListMachineUserAssignedRolesResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /iam/listMachineUserAssignedResourceRoles:
    post:
      summary: Lists a machine user's assigned resource roles.
      description: Lists a machine user's assigned resource roles.
      operationId: listMachineUserAssignedResourceRoles
      x-right: iam/listAssignedResourceRoles
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListMachineUserAssignedResourceRolesRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/ListMachineUserAssignedResourceRolesResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /iam/listResourceAssignees:
    post:
      summary: List the resource assignees and their respective resource roles for the resource.
      description: List the resource assignees and their respective resource roles for the resource.
      operationId: listResourceAssignees
      x-right: iam/listResourceAssignees
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListResourceAssigneesRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/ListResourceAssigneesResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /iam/createMachineUser:
    post:
      summary: Create a machine user.
      description: Creates a machine user in the account. A machine user can be used to access Altus API. A machine user can have access keys associated with it and can be assigned roles and resource roles. A machine user cannot login to the Altus console.
      operationId: createMachineUser
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateMachineUserRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/CreateMachineUserResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /iam/listMachineUsers:
    post:
      summary: Lists machine users.
      description: Lists machine users in the account.
      operationId: listMachineUsers
      x-paginates: true
      x-paging-default-max-items: 100
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListMachineUsersRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/ListMachineUsersResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /iam/deleteMachineUser:
    post:
      summary: Delete a machine user.
      description: Deletes a machine user previously created in the account.
      operationId: deleteMachineUser
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteMachineUserRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/DeleteMachineUserResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
definitions:
  Error:
    type: object
    description: An object returned on an error.
    properties:
      code:
        type: string
        description: The error code.
      message:
        type: string
        description: The error message.
  User:
    type: object
    description: Information about a Cloudera Altus user.
    required:
      - userId
      - crn
      - email
      - firstName
      - lastName
      - creationDate
      - accountAdmin
    x-limits:
      - scope: account
        value: 100
        doc: The maximum number of users that can be created in an account.
    properties:
      userId:
        type: string
        description: The stable, unique identifier of the user.
      crn:
        type: string
        description: The CRN of the user.
      email:
        type: string
        description: The user's email address.
      firstName:
        type: string
        description: The user's first name.
      lastName:
        type: string
        description: The user's last name.
      creationDate:
        type: string
        format: date-time
        description: The date when this user record was created.
      accountAdmin:
        type: boolean
        description: Whether the user is an administrator of their Altus account.
      lastInteractiveLogin:
        type: string
        format: date-time
        description: The date of the user's last interactive login.
  MachineUser:
    type: object
    description: Information about a Cloudera Altus machine user.
    required:
      - machineUserName
      - crn
      - creationDate
    x-limits:
      - scope: account
        value: 100
        doc: The maximum number of machine users that can be created in an account.
    properties:
      machineUserName:
        type: string
        description: The machine user name.
      crn:
        type: string
        description: The CRN of the user.
      creationDate:
        type: string
        format: date-time
        description: The date when this machine user record was created.
  AccessKey:
    type: object
    description: Information about a Cloudera Altus access key.
    required:
      - accessKeyId
      - crn
      - actorCrn
      - creationDate
    x-limits:
      - scope: account
        value: 200
        doc: The maximum number of access keys that can be created in an account.
    properties:
      accessKeyId:
        type: string
        description: The ID of the access key.
      crn:
        type: string
        description: The CRN of the access key.
      actorCrn:
        type: string
        description: The CRN of the actor with which this access key is associated.
      creationDate:
        type: string
        format: date-time
        description: The date when the access key was created.
      status:
        type: string
        description: The status of an access key.
        enum:
          - ACTIVE
          - INACTIVE
      lastUsage:
        $ref: '#/definitions/AccessKeyLastUsage'
        description: Information on the last time this access key was used.
  AccessKeyLastUsage:
    type: object
    description: Information on the last time an access key was used.
    properties:
      lastUsageDate:
        type: string
        format: date-time
        description: The date when the access key was last used.
      serviceName:
        type: string
        description: The name of the service with which this access key was most recently used.
  PolicyStatement:
    type: object
    description: A policy statement is a list of rights and zero or more resources on which the rights are granted.
    required:
      - rights
      - resources
    properties:
      rights:
        type: array
        items:
          type: string
        description: The list of rights in the policy statement.
      resources:
        type: array
        items:
          type: string
        description: The resources on which the rights are granted.
  Policy:
    type: object
    description: A policy contains a list of one or more policy statements.
    required:
      - crn
      - policyStatements
    properties:
      crn:
        type: string
        description: The policy crn.
      policyStatements:
        type: array
        items:
          $ref: '#/definitions/PolicyStatement'
        description: The policy statements.
  ResourceRole:
    type: object
    description: Information about a resource role. A resource role is a role that grants a collection of rights to a user on resources.
    required:
      - crn
      - rights
    properties:
      crn:
        type: string
        description: The CRN of the resource role.
      rights:
        type: array
        items:
          type: string
        description: The rights granted by this role.
  Role:
    type: object
    description: Information about a role.
    required:
      - crn
      - policies
    properties:
      crn:
        type: string
        description: The role's CRN.
      policies:
        type: array
        items:
          $ref: '#/definitions/Policy'
        description: The list of policies that belong to the role. Cannot be empty.
  ResourceAssignment:
    type: object
    description: Information about a resource assignment.
    required:
      - resourceCrn
      - resourceRoleCrn
    properties:
      resourceCrn:
        type: string
        description: The assigned resource's CRN.
      resourceRoleCrn:
        type: string
        description: The assigned resource role CRN.
  ResourceAssignee:
    type: object
    description: Information about the resource role assignee for the resource.
    required:
      - assigneeCrn
      - resourceRoleCrn
    properties:
      assigneeCrn:
        type: string
        description: The CRN of the assignee.
      resourceRoleCrn:
        type: string
        description: The assigned resource role CRN.
  GetUserRequest:
    type: object
    description: Request object for a get user request.
    properties:
      userId:
        type: string
        description: The ID of the user to get information about. If it is not included, it defaults to the user making the request.
  GetUserResponse:
    type: object
    description: Response object for a get user request.
    required:
      - user
    properties:
      user:
        $ref: '#/definitions/User'
        description: Information about the user.
  ListUsersRequest:
    type: object
    description: Request object for a list users request.
    properties:
      userIds:
        type: array
        items:
          type: string
        description: The user IDs or CRNs of the users.
      pageSize:
        type: integer
        format: int32
        minimum: 1
        maximum: 100
        x-paging-page-size: true
        description: The size of each page.
      startingToken:
        type: string
        x-paging-input-token: true
        description: A token to specify where to start paginating. This is the nextToken from a previously truncated response.
  ListUsersResponse:
    type: object
    description: Response object for a list users request.
    required:
      - users
    properties:
      users:
        type: array
        items:
          $ref: '#/definitions/User'
        x-paging-result: true
        description: The users.
      nextToken:
        type: string
        x-paging-output-token: true
        description: The token to use when requesting the next set of results. If not present, there are no additional results.
  CreateUserAccessKeyRequest:
    type: object
    description: Request object for a create user access key request.
    properties:
      user:
        type: string
        description: The ID or CRN of the user to whom this access key will be associated. If it is not included, it defaults to the user making the request.
  CreateUserAccessKeyResponse:
    type: object
    description: Response object for a create user access key request.
    required:
      - accessKey
      - privateKey
    properties:
      accessKey:
        $ref: '#/definitions/AccessKey'
        description: The access key that was created.
      privateKey:
        type: string
        description: The private key associated with this access key. This string is the contents of a PEM file containing a PKCS#8 private key.
        x-sensitive: true
  CreateMachineUserAccessKeyRequest:
    type: object
    description: Request object for a create machine user access key request.
    required:
      - machineUserName
    properties:
      machineUserName:
        type: string
        description: The name or CRN of the machine user to whom this access key will be associated.
  CreateMachineUserAccessKeyResponse:
    type: object
    description: Response object for a create machine user access key request.
    required:
      - accessKey
      - privateKey
    properties:
      accessKey:
        $ref: '#/definitions/AccessKey'
        description: The access key that was created.
      privateKey:
        type: string
        description: The private key associated with this access key. This string is the contents of a PEM file containing a PKCS#8 private key.
        x-sensitive: true
  DeleteAccessKeyRequest:
    type: object
    description: Request object for a delete access key request.
    required:
      - accessKeyId
    properties:
      accessKeyId:
        type: string
        description: The ID of the access key.
  DeleteAccessKeyResponse:
    type: object
    description: Response object for a delete access key request.
  UpdateAccessKeyRequest:
    type: object
    description: Request object for an update access key request.
    required:
      - accessKeyId
      - status
    properties:
      accessKeyId:
        type: string
        description: The ID of the access key to update.
      status:
        type: string
        description: The status to assign to the access key.
        enum:
          - ACTIVE
          - INACTIVE
  UpdateAccessKeyResponse:
    type: object
    description: Response object for an update access key request.
    required:
      - accessKey
    properties:
      accessKey:
        $ref: '#/definitions/AccessKey'
        description: The access key that was updated.
  GetAccessKeyRequest:
    type: object
    description: Request object for a get access key request.
    properties:
      accessKeyId:
        type: string
        description: The ID of the access key to get information about. If it is not included, it defaults to the access key used to make the request.
  GetAccessKeyResponse:
    type: object
    description: Response object for a get access key request.
    required:
      - accessKey
    properties:
      accessKey:
        $ref: '#/definitions/AccessKey'
        description: Information about the access key.
  ListAccessKeysRequest:
    type: object
    description: Request object for a list access keys request.
    properties:
      accessKeyIds:
        type: array
        items:
          type: string
        description: The access key IDs or CRNs of the access keys.
      pageSize:
        type: integer
        format: int32
        minimum: 1
        maximum: 100
        x-paging-page-size: true
        description: The size of each page.
      startingToken:
        type: string
        x-paging-input-token: true
        description: A token to specify where to start paginating. This is the nextToken from a previously truncated response.
  ListAccessKeysResponse:
    type: object
    description: Response object for a list access keys request.
    required:
      - accessKeys
    properties:
      accessKeys:
        type: array
        items:
          $ref: '#/definitions/AccessKey'
        x-paging-result: true
        description: The access keys.
      nextToken:
        type: string
        x-paging-output-token: true
        description: The token to use when requesting the next set of results. If not present, there are no additional results.
  ListRolesRequest:
    type: object
    description: Request object for a list roles request.
    properties:
      roleNames:
        type: array
        items:
          type: string
        description: The roles names or CRNs to retrieve. If empty all roles will be returned.
      pageSize:
        type: integer
        format: int32
        minimum: 1
        maximum: 100
        x-paging-page-size: true
        description: The size of each page.
      startingToken:
        type: string
        x-paging-input-token: true
        description: A token to specify where to start paginating. This is the nextToken from a previously truncated response.
  ListRolesResponse:
    type: object
    description: Response object for a list roles request.
    required:
      - roles
    properties:
      roles:
        type: array
        items:
          $ref: '#/definitions/Role'
        x-paging-result: true
        description: The list of roles in the account.
      nextToken:
        type: string
        x-paging-output-token: true
        description: The token to use when requesting the next set of results. If not present, there are no additional results.
  ListResourceRolesRequest:
    type: object
    description: Request object for a list resource roles request.
    properties:
      resourceRoleNames:
        type: array
        items:
          type: string
        description: The resource roles CRNs to retrieve. If empty all resource roles will be returned.
      pageSize:
        type: integer
        format: int32
        minimum: 1
        maximum: 100
        x-paging-page-size: true
        description: The size of each page.
      startingToken:
        type: string
        x-paging-input-token: true
        description: A token to specify where to start paginating. This is the nextToken from a previously truncated response.
  ListResourceRolesResponse:
    type: object
    description: Response object for a list resource roles request.
    required:
      - resourceRoles
    properties:
      resourceRoles:
        type: array
        items:
          $ref: '#/definitions/ResourceRole'
        x-paging-result: true
        description: The list of resource roles. Cannot be empty.
      nextToken:
        type: string
        x-paging-output-token: true
        description: The token to use when requesting the next set of results. If not present, there are no additional results.
  AssignUserRoleRequest:
    type: object
    description: Request object for an assign user role request.
    required:
      - user
      - role
    properties:
      user:
        type: string
        description: The user the role is assigned to. Can be the user's CRN or id.
      role:
        type: string
        description: The role to assign to the user. Can be the role's CRN or name.
  AssignUserRoleResponse:
    type: object
    description: Response object for an assign user role request.
  UnassignUserRoleRequest:
    type: object
    description: Request object for an unassign user role request.
    required:
      - user
      - role
    properties:
      user:
        type: string
        description: The user to unassigned the roles from. Can be the user CRN or id.
      role:
        type: string
        description: The role to unassigned from the user. Can be the role's CRN or name.
  UnassignUserRoleResponse:
    type: object
    description: Response object for an unassign user role request.
  AssignUserResourceRoleRequest:
    type: object
    description: Request object for an assign user resource role request.
    required:
      - user
      - resourceRoleCrn
      - resourceCrn
    properties:
      user:
        type: string
        description: The user to assign the resource role to. Can be the user's CRN or id.
      resourceRoleCrn:
        type: string
        description: The CRN of the resource role to assign to the user.
      resourceCrn:
        type: string
        description: The resource for which the resource role rights are granted.
  AssignUserResourceRoleResponse:
    type: object
    description: Response object for an assign user resource role request.
  UnassignUserResourceRoleRequest:
    type: object
    description: Request object for an unassign user role request.
    required:
      - user
      - resourceRoleCrn
      - resourceCrn
    properties:
      user:
        type: string
        description: The user to unassign the resource role from.
      resourceRoleCrn:
        type: string
        description: The CRN of the resource role to unassigned from the user.
      resourceCrn:
        type: string
        description: The CRN of the resource for which the resource role rights will be unassigned.
  UnassignUserResourceRoleResponse:
    type: object
    description: Response object for an unassign user role request.
  ListUserAssignedRolesRequest:
    type: object
    description: Request object for a list user assigned roles request.
    properties:
      user:
        type: string
        description: The user to list the assigned roles for. Can be the user's CRN or id. If it is not included, it defaults to the user making the request.
      pageSize:
        type: integer
        format: int32
        minimum: 1
        maximum: 100
        x-paging-page-size: true
        description: The size of each page.
      startingToken:
        type: string
        x-paging-input-token: true
        description: A token to specify where to start paginating. This is the nextToken from a previously truncated response.
  ListUserAssignedRolesResponse:
    type: object
    description: Response object for a list user assigned roles request.
    required:
      - roleCrns
    properties:
      roleCrns:
        type: array
        items:
          type: string
        x-paging-result: true
        description: The role CRNs assigned to the user.
      nextToken:
        type: string
        x-paging-output-token: true
        description: The token to use when requesting the next set of results. If not present, there are no additional results.
  ListUserAssignedResourceRolesRequest:
    type: object
    description: Request object for a list user assigned resource roles request.
    properties:
      user:
        type: string
        description: The user to list the assigned roles for. Can be the user's CRN or id. If it is not included, it defaults to the user making the request.
      pageSize:
        type: integer
        format: int32
        minimum: 1
        maximum: 100
        x-paging-page-size: true
        description: The size of each page.
      startingToken:
        type: string
        x-paging-input-token: true
        description: A token to specify where to start paginating. This is the nextToken from a previously truncated response.
  ListUserAssignedResourceRolesResponse:
    type: object
    description: Response object for a list user assigned roles request.
    required:
      - resourceAssignments
    properties:
      resourceAssignments:
        type: array
        items:
          $ref: '#/definitions/ResourceAssignment'
        x-paging-result: true
        description: The user's resource assignments.
      nextToken:
        type: string
        x-paging-output-token: true
        description: The token to use when requesting the next set of results. If not present, there are no additional results.
  AssignMachineUserRoleRequest:
    type: object
    description: Request object for an assign machine user role request.
    required:
      - machineUserName
      - role
    properties:
      machineUserName:
        type: string
        description: The machine user the role is assigned to. Can be the machine user's name or CRN.
      role:
        type: string
        description: The role to assign to the machine user. Can be the role's name or CRN.
  AssignMachineUserRoleResponse:
    type: object
    description: Response object for an assign machine user role request.
  UnassignMachineUserRoleRequest:
    type: object
    description: Request object for an unassign machine user role request.
    required:
      - machineUserName
      - role
    properties:
      machineUserName:
        type: string
        description: The machine user to unassigned the roles from. Can be the machine user's name or CRN.
      role:
        type: string
        description: The role to unassigned from the user. Can be the role's name or CRN.
  UnassignMachineUserRoleResponse:
    type: object
    description: Response object for an unassign machine user role request.
  AssignMachineUserResourceRoleRequest:
    type: object
    description: Request object for an assign machine user resource role request.
    required:
      - machineUserName
      - resourceRoleCrn
      - resourceCrn
    properties:
      machineUserName:
        type: string
        description: The machine user to assign the resource role to. Can be the user's name or CRN.
      resourceRoleCrn:
        type: string
        description: The CRN of the resource role to assign to the machine user.
      resourceCrn:
        type: string
        description: The resource for which the resource role rights are granted.
  AssignMachineUserResourceRoleResponse:
    type: object
    description: Response object for an assign machine user resource role request.
  UnassignMachineUserResourceRoleRequest:
    type: object
    description: Request object for an unassign machine user role request.
    required:
      - machineUserName
      - resourceRoleCrn
      - resourceCrn
    properties:
      machineUserName:
        type: string
        description: The machine user to unassign the resource role from.
      resourceRoleCrn:
        type: string
        description: The CRN of the resource role to unassigned from the machine user.
      resourceCrn:
        type: string
        description: The CRN of the resource for which the resource role rights will be unassigned.
  UnassignMachineUserResourceRoleResponse:
    type: object
    description: Response object for an unassign machine user role request.
  ListMachineUserAssignedRolesRequest:
    type: object
    description: Request object for a list machine user assigned roles request.
    required:
      - machineUserName
    properties:
      machineUserName:
        type: string
        description: The machine user to list the assigned roles for. Can be the machine user's name or CRN.
      pageSize:
        type: integer
        format: int32
        minimum: 1
        maximum: 100
        x-paging-page-size: true
        description: The size of each page.
      startingToken:
        type: string
        x-paging-input-token: true
        description: A token to specify where to start paginating. This is the nextToken from a previously truncated response.
  ListMachineUserAssignedRolesResponse:
    type: object
    description: Response object for a list machine user assigned roles request.
    required:
      - roleCrns
    properties:
      roleCrns:
        type: array
        items:
          type: string
        x-paging-result: true
        description: The role CRNs assigned to the user.
      nextToken:
        type: string
        x-paging-output-token: true
        description: The token to use when requesting the next set of results. If not present, there are no additional results.
  ListMachineUserAssignedResourceRolesRequest:
    type: object
    description: Request object for a list machine user assigned resource roles request.
    required:
      - machineUserName
    properties:
      machineUserName:
        type: string
        description: The machine user to list the assigned resource roles for. Can be the machine user's name or CRN.
      pageSize:
        type: integer
        format: int32
        minimum: 1
        maximum: 100
        x-paging-page-size: true
        description: The size of each page.
      startingToken:
        type: string
        x-paging-input-token: true
        description: A token to specify where to start paginating. This is the nextToken from a previously truncated response.
  ListMachineUserAssignedResourceRolesResponse:
    type: object
    description: Response object for a list machine user assigned roles request.
    required:
      - resourceAssignments
    properties:
      resourceAssignments:
        type: array
        items:
          $ref: '#/definitions/ResourceAssignment'
        x-paging-result: true
        description: The user's resource assignments.
      nextToken:
        type: string
        x-paging-output-token: true
        description: The token to use when requesting the next set of results. If not present, there are no additional results.
  ListResourceAssigneesRequest:
    type: object
    description: Request object for a list resource assignees request.
    required:
      - resourceCrn
    properties:
      resourceCrn:
        type: string
        description: The resource CRN for which to list the assignees.
      pageSize:
        type: integer
        format: int32
        minimum: 1
        maximum: 100
        x-paging-page-size: true
        description: The size of each page.
      startingToken:
        type: string
        x-paging-input-token: true
        description: A token to specify where to start paginating. This is the nextToken from a previously truncated response.
  ListResourceAssigneesResponse:
    type: object
    description: Response object for a list resource assignees request.
    required:
      - resourceAssignees
    properties:
      resourceAssignees:
        type: array
        items:
          $ref: '#/definitions/ResourceAssignee'
        x-paging-result: true
        description: List of resource assignees and their respective resource roles for the resource.
      nextToken:
        type: string
        x-paging-output-token: true
        description: The token to use when requesting the next set of results. If not present, there are no additional results.
  CreateMachineUserRequest:
    type: object
    description: Request object for create machine user request.
    required:
      - machineUserName
    properties:
      machineUserName:
        type: string
        description: The name to use for the new machine user. The name should be an alpha numeric string, including '-' and '_', no longer than 128 characters long. Only one machine user with this name can be exist at a given time in an account.
  CreateMachineUserResponse:
    type: object
    description: Response object for create machine user request.
    required:
      - machineUser
    properties:
      machineUser:
        $ref: '#/definitions/MachineUser'
        description: Information about the machine user.
  ListMachineUsersRequest:
    type: object
    description: Request object for a list machine users request.
    properties:
      machineUserNames:
        type: array
        items:
          type: string
        description: The machine user names or CRNs of the macihne users. If not provided all machine users for the account are retrieved.
      pageSize:
        type: integer
        format: int32
        minimum: 1
        maximum: 100
        x-paging-page-size: true
        description: The size of each page.
      startingToken:
        type: string
        x-paging-input-token: true
        description: A token to specify where to start paginating. This is the nextToken from a previously truncated response.
  ListMachineUsersResponse:
    type: object
    description: Response object for a list machine users request.
    required:
      - machineUsers
    properties:
      machineUsers:
        type: array
        items:
          $ref: '#/definitions/MachineUser'
        x-paging-result: true
        description: The machine users.
      nextToken:
        type: string
        x-paging-output-token: true
        description: The token to use when requesting the next set of results. If not present, there are no additional results.
  DeleteMachineUserRequest:
    type: object
    description: Request object for delete machine user request.
    required:
      - machineUserName
    properties:
      machineUserName:
        type: string
        description: The name or CRN of the machine user to delete.
  DeleteMachineUserResponse:
    type: object
    description: Response object for delete machine user request.
