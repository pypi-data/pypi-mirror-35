CHANGES
=======

3.3.3
-----

* Moved call to handler into a separate method

3.3.2
-----

* Added message
* Added a default handler to handle the case where a handler is not specified

3.3.1
-----

* Insert rather than append so correct order is maintained
* Fixed name generation of check

3.3
---

* Updated to Beta

3.2
---

* Updated travis execution, fixed landscape.io message, introduce bandit security checks
* Landscape.io fixes
* Cleanup of imports/typing etc
* Migrated to environmental markers
* Added tabular check report
* Fixed travis config
* Updated build settings drop python 3.4
* Extra requirements for python 2.7
* make compatible between python 2 and 3
* Documented and tested providers
* Built out provider support
* Added typing and enum requirements for Python 2.7
* Base implementation of providers
* Migrated import type into utils

3.1
---

* Fix python3 specific error
* Fixes and additional tests uncovered by codecov and landscape.io
* Reversed change to reset root log level
* Improve help and scope of env settings

0.3
---

* Added more info on what the project handles
* Fixed test and added a settings
* Added settings report, allow builtin handlers to be removed (except checks)

0.2.2
-----

* Generate summary in a property

0.2.1
-----

* Correct startup log report
* Fixed bug in report header output
* Improved log reporting
* Test cases and fixes for factories always return "default" entry

0.2
---

* Fixes for landscape.io
* Corrected help text around the environment settings key
* Added feature to allow override of settings from environment, added method to generate an exception report
* Trigger checks prior to other command
* Updated tests for ready callback and and extension report
* Added a ready trigger, and a slight cleanup to startup code
* Made width a class attribute
* Corrected path for tests, added placeholder for extensions report
* Updated docs
* Corrected naming "that could have sucked!"
* Improved extension report
* Added a command to list extensions
* Updates to extensions to support relative references for settings and checks, split extension defs into their own wrapper class. Migrated to custom version of cached\_property that is defined in pyapp.utils
* Added support for extensions
* Added fixes suggested by landscape.io
* Updated docs

0.1.1
-----

* Improved documentation Sem-Ver: bugfix

0.1
---

* Refactor to simplify use of factories promote reuse
* Added tests for attached checks
* Compatibility fixes between various python versions
* Embrace python 3 first
* Re-ordered params (--nocolor is now a top level argument)
* Always use loggers based on \_\_name\_\_
* Tweaks to docs/comments
* Added option to execute checks on startup
* Improved logging by configuring default logging settings prior to loading settings, allow settings logging to be reported
* Change config\_definitions to use a cached property, this simplifies the implementation somewhat
* Change to check name to use setting (this makes more sense for plugin factory, as it's not as likely to be sub-classed)
* Changes to checks to ensure config definitions are valid for running checks (due to differing ways of loading them from settings)
* Tweak to get configuration from settings file on request (works around an issue fetching the settings before they are loaded)
* Improved reporting of names for class checks
* Attempt to auto import application specific checks (if they exist)
* Added a simple way to ensure checks are imported
* Updated tests to support changes to conf helpers
* Simplify configuration factory
* Added a sample application
* Rename factories to plugins, create much simplier factories into helpers
* Update settings to pass settings as kwarg
* Changes to how checks are called (settings is a kwarg again as this simplifies a lot), changes on how names are generated
* Make settings a positional argument rather than a named argument (as settings is used in context)
* Removed duplicate test
* Added NamedConfiguration helper (to allow for named config groups to be defined in settings, these are similar to factories but do not produce instances)
* Updated tests to handle change to tag storage location
* Refactor of where factory sits (makes sense to be a conf helper). Auto register for checks (thanks to checks registry now supporting this use-case)
* Obsessed..
* Support objects that have a checks method as a check
* Added sphinx docs and greatly improved inline docs
* Added python3.6 to travis CI
* Move out check import
* Added checks to factory
* Fixed bug when cli help from the \_\_doc\_\_ was being extracted from the wrong variable
* Added message level filtering
* Tweak to bottom border to make it clearer what each block of text relates to
* Fixed bug that causes an error if colorama is not installed (library should operate with or without colorama)
* Slight tweak to improve code score
* Fixed issue where no\_color didn't default to \*True\* when colorama is not installed
* Tweak travis config to ensure colorama is installed
* Improved report to generate nice output (in colour). Test cases etc
* Removed CLI as it does not provide anything useful at this point
* Some clean up and test cases for the main CliApplication and associated objects
* Moved version into app class (default version to 1)
* Include logging version
* Updated gitignore
* Code clean up
* Added ThreadLocalNamedSingletonFactory, documentation improvements
* Added abc checks, more tests
* Pep8 fixes
* Remove circular import
* Introduced factory classes
* Added is\_configured option to settings
* Pep8 code/cleanup fixes
* Updated tests back to unix style for tests, breaks windows but meh
* Added configuration for settings and logging
* Updated checks processing
* Updated test to run on windows
* Updated registry to support yielding check results
* Setup checks execution, trying out some ideas around defining arguments etc
* Started integration of check report
* Roughed dispatch
* Initial CLI interface
* Simplification of setup file
* Added main entry point
* Big update to pyapp module to better support pbr and set a default logger
* Added arg-complete to nice CLI options
* Added additional test for un-covered branch
* Added check for DEBUG setting
* Ensure settings are configured for tests
* Added a mechanism to apply temporary changes to settings (for testing)
* Migrated DEBUG check into "security"
* Added description of InvalidConfiguration exception
* Added initial checks for conf. - DEBUG check
* Added convenience imports for checks and some initial placeholder documentation
* Added tags object to hold built-in tags
* Ignore artifacts from pbr build
* Migrated to using OpenStack pbr for building packages
* Tweak to tests to ensure alternate branch in code is checked
* Renamed Warning to Warn (avoid warnings from landscape.io)
* More tests for registry
* Additional documentation
* Tweak to name
* Set correct development status
* Tweak to project name
* Tests for CheckRegistry.register
* Added comparison (\_\_eq\_\_ and \_\_ne\_\_) methods and added tests for the whole message class
* Removed unused import
* Added placeholder for CheckRegistry tests
* Added basic tests for CheckMessage
* Added tests for utils
* Docs and pep8 updates
* Added register method and tests to cover
* Changed LOADER Map into a registry object
* Brought across a rought version of Django Checks
* Added reference to Django
* Added messages output (largely from Django)
* Added tests for additional loaders and includes
* Added/update tests for loaders
* Updated factory method to use urllib.parse module.  Moved ModuleLoader into the base
* Fixed exception added branch reporting for coverage
* Removed encoding for Py27
* Added tests for files
* More tests
* Added exceptions
* Tweaks to the \_\_repr\_\_ option to more closely align with builtin python types. Calling iter explicitly is not required
* Added a factory method to load configuration from a settings URI
* Expanded documentation added scheme and use InvalidConfiguration exception
* Added a file loader that can load JSON files for settings
* Fixed spacing to fix github
* Tweaked
* Added badges from various checking services
* Updated code climate config (based on their very nice recommendations)
* Update documentation
* Added framework for setup, code climate, travis coverage tools etc
* Started docs for configuration
* Basic readme
* Updated test for warning
* Added test to prevent loading some file multiple times
* Initial tests
* Supply default to pop (else an exception is raised)
* Render loader name to match url "scheme"
* Fixed some bugs from brain dump and added some performance tweaks
* Initial commit
