{"version":3,"sources":["webpack:///./src/common/auth/external_auth.js"],"names":["window","externalApp","webkit","Error","ExternalAuth","hassUrl","this","_this","__proto__","Object","getPrototypeOf","call","data","access_token","expires","home_assistant_js_websocket__WEBPACK_IMPORTED_MODULE_0__","_createClass","key","value","_ref","fn","gen","apply","arguments","Promise","resolve","reject","step","arg","info","error","done","then","err","regeneratorRuntime","mark","_callee","meth","responseProm","tokens","wrap","_context","prev","next","getExternalAuth","messageHandlers","postMessage","externalAuthSetToken","callback","expires_in","Date","now"],"mappings":"mWAOA,IAAKA,OAAOC,cAAgBD,OAAOE,OACjC,MAAM,IAAIC,MAAM,qFAGGC,cACnB,SAAAA,EAAYC,oCAASD,GAATC,0DAASC,MAAA,IAAAC,oKAAAD,MAAAF,EAAAI,WAAAC,OAAAC,eAAAN,IAAAO,KAAAL,OAAA,OAGnBC,EAAKK,MACHP,UACAQ,aAAc,GAEdC,QAAS,GAPQP,qUADmBQ,EAAA,GAAAC,EAAAZ,IAAAa,IAAA,qBAAAC,MAAA,eAAAC,EAAA,SAAAC,GAAA,sBAAAC,EAAAD,EAAAE,MAAAhB,KAAAiB,WAAA,WAAAC,QAAA,SAAAC,EAAAC,GAAA,gBAAAC,EAAAV,EAAAW,GAAA,QAAAC,EAAAR,EAAAJ,GAAAW,GAAAV,EAAAW,EAAAX,MAAA,MAAAY,GAAA,YAAAJ,EAAAI,GAAA,IAAAD,EAAAE,KAAA,OAAAP,QAAAC,QAAAP,GAAAc,KAAA,SAAAd,GAAAS,EAAA,OAAAT,IAAA,SAAAe,GAAAN,EAAA,QAAAM,KAAAR,EAAAP,GAAA,aAAAgB,mBAAAC,KAAA,SAAAC,IAAA,IAAAC,EAAAC,EAAAC,EAAA,OAAAL,mBAAAM,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAahCN,EAAOrC,OAAOC,YAClBD,OAAOC,YAAY2C,gBACnB5C,OAAOE,OAAO2C,gBAAgBD,gBAAgBE,YAE1CR,EAAe,IAAId,QAAQ,SAACC,GAAczB,OAAA+C,qBAA0BtB,aAGpE,gBAENY,GAAOW,SA5Ba,yBAAAP,EAAAE,KAAA,EAmCCL,SAAfC,SAENjC,KAAKM,KAAKC,aAAe0B,EAAO1B,aAChCP,KAAKM,KAAKE,QAA+B,IAApByB,EAAOU,WAAqBC,KAAKC,uGAhChB,MAgCgBA,EAhCrC/C,GAgCqC+C","file":"1997827c03aaf09f241e.chunk.js","sourcesContent":["/**\n * Auth class that connects to a native app for authentication.\n */\nimport { Auth } from 'home-assistant-js-websocket';\n\nconst CALLBACK_METHOD = 'externalAuthSetToken';\n\nif (!window.externalApp && !window.webkit) {\n  throw new Error('External auth requires either externalApp or webkit defined on Window object.');\n}\n\nexport default class ExternalAuth extends Auth {\n  constructor(hassUrl) {\n    super();\n\n    this.data = {\n      hassUrl,\n      access_token: '',\n      // This will trigger connection to do a refresh right away\n      expires: 0,\n    };\n  }\n\n  async refreshAccessToken() {\n    const meth = window.externalApp ?\n      window.externalApp.getExternalAuth :\n      window.webkit.messageHandlers.getExternalAuth.postMessage;\n\n    const responseProm = new Promise((resolve) => { window[CALLBACK_METHOD] = resolve; });\n\n    // Allow promise to set resolve on window object.\n    await 0;\n\n    meth({ callback: CALLBACK_METHOD });\n\n    // Response we expect back:\n    // {\n    //   \"access_token\": \"qwere\",\n    //   \"expires_in\": 1800\n    // }\n    const tokens = await responseProm;\n\n    this.data.access_token = tokens.access_token;\n    this.data.expires = (tokens.expires_in * 1000) + Date.now();\n  }\n}\n"],"sourceRoot":""}