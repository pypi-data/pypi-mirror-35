Metadata-Version: 2.1
Name: syphon
Version: 0.1.2
Summary: A data storage and management engine.
Home-page: https://github.com/ethall/syphon
Author: Evan Hall
Maintainer: Keithley Instruments, LLC. et al.
License: MIT
Project-URL: Source, https://github.com/ethall/syphon
Project-URL: Tracker, https://github.com/ethall/syphon/issues
Description: 
        syphon
        ======
        
        > A data storage and management engine.
        
        **syphon** is a Python package that provides a simple interface to perform common tasks on labelled data.  Its aim is to fit seamlessly into any automation pipeline that requires organization and collation of large datasets.
        
        Features
        ========
        
        * Archive file(s) into a data storage directory.
        * Automatic archive organization based on the value of a data column (if a `.schema.json` file is present).
        * Combine new data with additional "meta" data before archival.
        * Build a single data file from the contents of the archive directory.
        * Initialize new archive directories by creating a new `.schema.json` file.
        
        Basic Usage
        ===========
        
        Archive a single file or multiple files with a wildcard pattern:
        ```
        python -m syphon archive ./storage/folder -d /path/to/data.csv
        
        python -m syphon archive ./storage/folder -d /path/to/*.csv
        ```
        
        Build a single data file from an archive directory:
        ```
        python -m syphon build /path/to/storage/folder all_data.csv
        ```
        
        General command line documentation and subcommand documentation can be accessed via
        ```
         python -m syphon --help
        
         python -m syphon SUBCOMMAND --help
        ```
        
        For detailed documentation, check out the [wiki](https://github.com/ethall/syphon/wiki).
        
        Unit Testing
        ============
        
        Install the `tox` and `pytest` packages via pip:
        ```
        pip install tox pytest
        ```
        
        Run quick tests (or all tests) against all available python environments:
        ```
        tox [-- --slow]
        ```
        
        Print all available test environments and test against only one:
        ```
        tox --listenvs
        ...     # list of environments
        
        tox -e ENV [-- --slow]
        ```
        
        License
        =======
        
        Copyright (c) Keithley Instruments, LLC. All rights reserved.
        
        Licensed under the [MIT](License) License.
        
Platform: UNKNOWN
Classifier: Development Status :: 4 - Beta
Classifier: Environment :: Console
Classifier: Intended Audience :: Science/Research
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: Microsoft :: Windows
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Classifier: Topic :: Scientific/Engineering
Requires-Python: >=3,!=3.0.*,!=3.2.*,!=3.3.*,!=3.4.*,!=3.7.*,<4
Description-Content-Type: text/markdown
Provides-Extra: dev
Provides-Extra: test
