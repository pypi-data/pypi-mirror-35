image: python:3.6.5

variables:
  GIT_STRATEGY: fetch
  PIPENV_VENV_IN_PROJECT: "true" # makes pipenv use ~/.venv
  PIPENV_CACHE_DIR: "$CI_PROJECT_DIR/.pipenvcache"
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.pipcache"
stages:
  - Unit tests & Coverage
  - Coverage Reporting
  - Linting
  - Package
  - Release to Test PyPI
  - Release to Live PyPI

cache:
  untracked: true
  paths:
  - "$CI_PROJECT_DIR/.pipcache"
  - "$CI_PROJECT_DIR/.pipenvcache"
  - "$CI_PROJECT_DIR/.venv"

before_script:
  - pip install --upgrade pip
  - pip install pipenv
  - pipenv install --dev --ignore-pipfile

unit testing and coverage:
  stage: Unit tests & Coverage
  script:
  - pipenv run python setup.py test
  coverage: '/TOTAL.+ ([0-9]{1,3}%)/' # regex used to pull out the coverage percentate in gitlab.
  artifacts:
      paths:
          - htmlcov
      expire_in: 1 day
  except:
    - master

pages:
  stage: Coverage Reporting
  script:
    - mkdir -p public/$CI_BUILD_REF_NAME/coverage
    - cp -fr htmlcov/* public/$CI_BUILD_REF_NAME/coverage/
  dependencies:
    - unit testing and coverage
  artifacts:
    paths:
    - public
  except:
    - master


# linting:
#   stage: Linting
#   script:
#   - pipenv run lint.sh
#   except:
#     - master

package:
  stage: Package
  artifacts:
    name: "$CI_PROJECT_NAME-$CI_COMMIT_TAG"
    paths:
      - dist/
    when: on_success
  script:
  - rm -rf dist
  - pipenv run python setup.py sdist bdist_wheel
  only:
    - tags 
  except:
    - master

deploy_to_test_pypi:
  stage: Release to Test PyPI
  environment:
    name: Test PyPI
    url: https://test.pypi.org/project/pyskyq
  dependencies:
    - package
  script:
  - rm -f .pypirc
  - echo "[distutils]" >> ~/.pypirc
  - echo "index-servers =" >> ~/.pypirc
  - echo "    pypi" >> ~/.pypirc
  - echo "" >> ~/.pypirc
  - echo "[pypi]" >> ~/.pypirc
  - echo "${PYPI_REPO}" >> ~/.pypirc
  - echo "${PYPI_USER}" >> ~/.pypirc
  - echo "${PYPI_PASSWORD}" >> ~/.pypirc
  - pipenv run twine upload dist/*
  only: # only ORs items under it. Use multiple to get an AND. 
    - tags 
  only:
    - develop

deploy_to_live_pypi:
  stage: Release to Live PyPI
  environment:
    name: Live PyPI
    url: https://pypi.org/project/pyskyq
  dependencies:
    - package
  script:
  - rm -f .pypirc
  - echo "[distutils]" >> ~/.pypirc
  - echo "index-servers =" >> ~/.pypirc
  - echo "    pypi" >> ~/.pypirc
  - echo "" >> ~/.pypirc
  - echo "[pypi]" >> ~/.pypirc
  - echo "${PYPI_REPO}" >> ~/.pypirc
  - echo "${PYPI_USER}" >> ~/.pypirc
  - echo "${PYPI_PASSWORD}" >> ~/.pypirc
  - pipenv run twine upload dist/*
  only: # only ORs items under it. Use multiple to get an AND. 
    - tags 
  only:
    - master
