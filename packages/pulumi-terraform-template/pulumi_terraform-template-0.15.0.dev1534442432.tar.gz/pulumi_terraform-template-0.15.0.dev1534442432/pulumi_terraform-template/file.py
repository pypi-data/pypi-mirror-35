# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import pulumi
import pulumi.runtime

class File(pulumi.CustomResource):
    def __init__(__self__, __name__, __opts__=None, filename=None, template=None, vars=None):
        """Create a File resource with the given unique name, props, and options."""
        if not __name__:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(__name__, basestring):
            raise TypeError('Expected resource name to be a string')
        if __opts__ and not isinstance(__opts__, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        if filename and not isinstance(filename, basestring):
            raise TypeError('Expected property filename to be a basestring')
        __self__.filename = filename
        """
        file to read template from
        """
        __props__['filename'] = filename

        if template and not isinstance(template, basestring):
            raise TypeError('Expected property template to be a basestring')
        __self__.template = template
        """
        Contents of the template
        """
        __props__['template'] = template

        if vars and not isinstance(vars, dict):
            raise TypeError('Expected property vars to be a dict')
        __self__.vars = vars
        """
        variables to substitute
        """
        __props__['vars'] = vars

        __self__.rendered = pulumi.runtime.UNKNOWN
        """
        rendered template
        """

        super(File, __self__).__init__(
            'terraform-template:index/file:File',
            __name__,
            __props__,
            __opts__)

    def set_outputs(self, outs):
        if 'filename' in outs:
            self.filename = outs['filename']
        if 'rendered' in outs:
            self.rendered = outs['rendered']
        if 'template' in outs:
            self.template = outs['template']
        if 'vars' in outs:
            self.vars = outs['vars']
