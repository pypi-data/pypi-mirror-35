apiVersion: v1
kind: Namespace
metadata:
  name: elk
---
# Derived from ./manifests
#---
#---
#apiVersion: rbac.authorization.k8s.io/v1beta1
#kind: ClusterRole
#metadata:
#  name: elasticsearch
#  labels:
#    app: elasticsearch
#    stack: logging
#rules:
#- apiGroups:
#  - extensions
#  resources:
#  - podsecuritypolicies
#  resourceNames:
#  - elasticsearch
#  verbs:
#  - use
#---
#kind: ClusterRoleBinding
#apiVersion: rbac.authorization.k8s.io/v1beta1
#metadata:
#  name: elasticsearch
#  labels:
#    app: elasticsearch
#    stack: logging
#subjects:
#- kind: ServiceAccount
#  name: elasticsearch
#  namespace: default
#roleRef:
#  kind: ClusterRole
#  name: elasticsearch
#  apiGroup: rbac.authorization.k8s.io
#---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: elasticsearch
  namespace: elk
  labels:
    app: elasticsearch
    stack: logging
---
#apiVersion: extensions/v1beta1
#kind: PodSecurityPolicy
#metadata:
#  name: elasticsearch
#  labels:
#    app: elasticsearch
#    stack: logging
#spec:
#  fsGroup:
#    rule: RunAsAny
#  privileged: true
#  runAsUser:
#    rule: RunAsAny
#  seLinux:
#    rule: RunAsAny
#  allowedCapabilities:
#  - 'IPC_LOCK'
#  - 'SYS_RESOURCE'
#  supplementalGroups:
#    rule: RunAsAny
#  volumes:
#  - '*'
#  hostPID: true
#  hostIPC: true
#  hostNetwork: true
#  hostPorts:
#  - min: 1
#    max: 65536
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: elasticsearch
  namespace: elk
  labels:
    app: elasticsearch
    stack: logging
data:
  elasticsearch.yml: |
    cluster.name: full-stack-cluster
    node.name: node-1
    path.data: /usr/share/elasticsearch/data
    http:
      host: 0.0.0.0
      port: 9200
    bootstrap.memory_lock: true
    transport.host: 127.0.0.1
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: elasticsearch
  namespace: elk
  labels:
    app: elasticsearch
    stack: logging
spec:
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: elasticsearch
        stack: logging
    spec:
      serviceAccountName: elasticsearch
      initContainers:
      - name: set-vm-max-map-count
        image: busybox
        imagePullPolicy: IfNotPresent
        command: ['sysctl', '-w', 'vm.max_map_count=262144']
        securityContext:
          privileged: true
      - name: volume-mount-hack
        image: busybox
        imagePullPolicy: IfNotPresent
        command: ["sh", "-c", "chown -R 1000:100 /usr/share/elasticsearch/data"]
        volumeMounts:
        - name: data
          mountPath: /usr/share/elasticsearch/data
      containers:
      - name: elasticsearch
        image: docker.elastic.co/elasticsearch/elasticsearch-oss:6.0.0
        imagePullPolicy: IfNotPresent
        env:
        - name: ES_JAVA_OPTS
          value: -Xms1024m -Xmx1024m
          # ES_MEM_LIMIT=2g
          # ES_JVM_HEAP=1024m
        ports:
        - containerPort: 9200
        resources:
          limits:
            memory: "2147483648"
        volumeMounts:
        - name: config
          mountPath: /usr/share/elasticsearch/elasticsearch.yml
          subPath: elasticsearch.yml
        - name: data
          mountPath: /usr/share/elasticsearch/data
      # Allow non-root user to access PersistentVolume
      securityContext:
        fsGroup: 1000
      restartPolicy: Always
      volumes:
      - name: config
        configMap:
          name: elasticsearch
      - name: data
        persistentVolumeClaim:
          claimName: elasticsearch
      # - name: data
      #   hostPath:
      #     path: /srv/elasticsearch-data
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: elasticsearch
  namespace: elk
  labels:
    app: elasticsearch
    stack: logging
spec:
  rules:
  -
    host: elasticsearch.{{ settings.provision.domain }}
    http:
      paths:
      - path: /
        backend:
          serviceName: elasticsearch
          servicePort: 9200
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: elasticsearch
  namespace: elk
  labels:
    app: elasticsearch
    stack: logging
spec:
  # storageClassName: standard
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1G
---
apiVersion: v1
kind: Service
metadata:
  name: elasticsearch
  namespace: elk
  labels:
    app: elasticsearch
    stack: logging
spec:
  # needed on minikube
  type: NodePort
  ports:
  - name: "api"
    port: 9200
    targetPort: 9200
  selector:
    app: elasticsearch
    stack: logging
