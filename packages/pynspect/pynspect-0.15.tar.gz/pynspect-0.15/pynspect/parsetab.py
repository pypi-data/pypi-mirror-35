
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'COMMA CONSTANT DATETIME FLOAT FUNCTION INTEGER IPV4 IPV6 LBRACK LPAREN OP_AND OP_AND_P OP_DIVIDE OP_EQ OP_EXISTS OP_GE OP_GT OP_IN OP_IS OP_LE OP_LIKE OP_LT OP_MINUS OP_MODULO OP_NE OP_NOT OP_OR OP_OR_P OP_PLUS OP_TIMES OP_XOR OP_XOR_P RBRACK RPAREN TIMEDELTA VARIABLEexpression : xor_expression OP_OR expression\n                      | xor_expressionxor_expression : and_expression OP_XOR xor_expression\n                          | and_expressionand_expression : or_p_expression OP_AND and_expression\n                          | or_p_expressionor_p_expression : xor_p_expression OP_OR_P or_p_expression\n                      | xor_p_expressionxor_p_expression : and_p_expression OP_XOR_P xor_p_expression\n                          | and_p_expressionand_p_expression : not_expression OP_AND_P and_p_expression\n                          | not_expressionnot_expression : OP_NOT ex_expression\n                          | ex_expressionex_expression : OP_EXISTS cmp_expression\n                         | cmp_expressioncmp_expression : term OP_LIKE cmp_expression\n                          | term OP_IN cmp_expression\n                          | term OP_IS cmp_expression\n                          | term OP_EQ cmp_expression\n                          | term OP_NE cmp_expression\n                          | term OP_GT cmp_expression\n                          | term OP_GE cmp_expression\n                          | term OP_LT cmp_expression\n                          | term OP_LE cmp_expression\n                          | termterm : factor OP_PLUS term\n                | factor OP_MINUS term\n                | factor OP_TIMES term\n                | factor OP_DIVIDE term\n                | factor OP_MODULO term\n                | factorfactor : IPV4\n                  | IPV6\n                  | DATETIME\n                  | TIMEDELTA\n                  | INTEGER\n                  | FLOAT\n                  | VARIABLE\n                  | CONSTANT\n                  | FUNCTION RPAREN\n                  | FUNCTION expression RPAREN\n                  | LBRACK list RBRACK\n                  | LPAREN expression RPARENlist : IPV4\n                | IPV6\n                | DATETIME\n                | TIMEDELTA\n                | INTEGER\n                | FLOAT\n                | VARIABLE\n                | CONSTANT\n                | IPV4 COMMA list\n                | IPV6 COMMA list\n                | DATETIME COMMA list\n                | TIMEDELTA COMMA list\n                | INTEGER COMMA list\n                | FLOAT COMMA list\n                | VARIABLE COMMA list\n                | CONSTANT COMMA list'
    
_lr_action_items = {'INTEGER':([0,3,10,14,15,19,34,35,38,39,40,41,42,43,46,47,49,50,51,52,53,54,55,56,57,58,59,61,62,63,64,65,66,67,],[2,25,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,25,25,25,25,25,25,25,25,]),'OP_GE':([2,6,7,8,11,12,16,20,21,22,37,60,70,71,72,73,74,75,77,],[-37,-40,-39,-38,-32,-35,-33,-36,55,-34,-41,-43,-42,-31,-28,-30,-29,-27,-44,]),'OP_MODULO':([2,6,7,8,11,12,16,20,22,37,60,70,77,],[-37,-40,-39,-38,38,-35,-33,-36,-34,-41,-43,-42,-44,]),'LPAREN':([0,10,14,15,19,34,35,38,39,40,41,42,43,46,47,49,50,51,52,53,54,55,56,57,58,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'OP_NOT':([0,10,14,34,35,43,46,47,58,],[15,15,15,15,15,15,15,15,15,]),'OP_AND_P':([2,5,6,7,8,9,11,12,16,20,21,22,23,37,45,48,60,70,71,72,73,74,75,77,80,81,82,83,84,85,86,87,88,],[-37,35,-40,-39,-38,-16,-32,-35,-33,-36,-26,-34,-14,-41,-13,-15,-43,-42,-31,-28,-30,-29,-27,-44,-17,-21,-20,-22,-24,-18,-23,-19,-25,]),'OP_IN':([2,6,7,8,11,12,16,20,21,22,37,60,70,71,72,73,74,75,77,],[-37,-40,-39,-38,-32,-35,-33,-36,54,-34,-41,-43,-42,-31,-28,-30,-29,-27,-44,]),'OP_DIVIDE':([2,6,7,8,11,12,16,20,22,37,60,70,77,],[-37,-40,-39,-38,40,-35,-33,-36,-34,-41,-43,-42,-44,]),'$end':([1,2,4,5,6,7,8,9,11,12,13,16,17,18,20,21,22,23,24,37,45,48,60,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,],[0,-37,-4,-12,-40,-39,-38,-16,-32,-35,-8,-33,-6,-2,-36,-26,-34,-14,-10,-41,-13,-15,-43,-3,-11,-42,-31,-28,-30,-29,-27,-7,-44,-5,-1,-17,-21,-20,-22,-24,-18,-23,-19,-25,-9,]),'OP_TIMES':([2,6,7,8,11,12,16,20,22,37,60,70,77,],[-37,-40,-39,-38,41,-35,-33,-36,-34,-41,-43,-42,-44,]),'OP_EQ':([2,6,7,8,11,12,16,20,21,22,37,60,70,71,72,73,74,75,77,],[-37,-40,-39,-38,-32,-35,-33,-36,51,-34,-41,-43,-42,-31,-28,-30,-29,-27,-44,]),'RBRACK':([25,26,27,28,29,30,31,32,33,90,91,92,93,94,95,96,97,],[-49,60,-52,-51,-50,-48,-46,-47,-45,-57,-60,-59,-58,-56,-54,-55,-53,]),'OP_PLUS':([2,6,7,8,11,12,16,20,22,37,60,70,77,],[-37,-40,-39,-38,42,-35,-33,-36,-34,-41,-43,-42,-44,]),'LBRACK':([0,10,14,15,19,34,35,38,39,40,41,42,43,46,47,49,50,51,52,53,54,55,56,57,58,],[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'OP_OR_P':([2,5,6,7,8,9,11,12,13,16,20,21,22,23,24,37,45,48,60,69,70,71,72,73,74,75,77,80,81,82,83,84,85,86,87,88,89,],[-37,-12,-40,-39,-38,-16,-32,-35,43,-33,-36,-26,-34,-14,-10,-41,-13,-15,-43,-11,-42,-31,-28,-30,-29,-27,-44,-17,-21,-20,-22,-24,-18,-23,-19,-25,-9,]),'OP_XOR':([2,4,5,6,7,8,9,11,12,13,16,17,20,21,22,23,24,37,45,48,60,69,70,71,72,73,74,75,76,77,78,80,81,82,83,84,85,86,87,88,89,],[-37,34,-12,-40,-39,-38,-16,-32,-35,-8,-33,-6,-36,-26,-34,-14,-10,-41,-13,-15,-43,-11,-42,-31,-28,-30,-29,-27,-7,-44,-5,-17,-21,-20,-22,-24,-18,-23,-19,-25,-9,]),'IPV4':([0,3,10,14,15,19,34,35,38,39,40,41,42,43,46,47,49,50,51,52,53,54,55,56,57,58,59,61,62,63,64,65,66,67,],[16,33,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,33,33,33,33,33,33,33,33,]),'OP_LT':([2,6,7,8,11,12,16,20,21,22,37,60,70,71,72,73,74,75,77,],[-37,-40,-39,-38,-32,-35,-33,-36,53,-34,-41,-43,-42,-31,-28,-30,-29,-27,-44,]),'OP_XOR_P':([2,5,6,7,8,9,11,12,16,20,21,22,23,24,37,45,48,60,69,70,71,72,73,74,75,77,80,81,82,83,84,85,86,87,88,],[-37,-12,-40,-39,-38,-16,-32,-35,-33,-36,-26,-34,-14,58,-41,-13,-15,-43,-11,-42,-31,-28,-30,-29,-27,-44,-17,-21,-20,-22,-24,-18,-23,-19,-25,]),'OP_MINUS':([2,6,7,8,11,12,16,20,22,37,60,70,77,],[-37,-40,-39,-38,39,-35,-33,-36,-34,-41,-43,-42,-44,]),'OP_IS':([2,6,7,8,11,12,16,20,21,22,37,60,70,71,72,73,74,75,77,],[-37,-40,-39,-38,-32,-35,-33,-36,56,-34,-41,-43,-42,-31,-28,-30,-29,-27,-44,]),'RPAREN':([2,4,5,6,7,8,9,10,11,12,13,16,17,18,20,21,22,23,24,36,37,44,45,48,60,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,],[-37,-4,-12,-40,-39,-38,-16,37,-32,-35,-8,-33,-6,-2,-36,-26,-34,-14,-10,70,-41,77,-13,-15,-43,-3,-11,-42,-31,-28,-30,-29,-27,-7,-44,-5,-1,-17,-21,-20,-22,-24,-18,-23,-19,-25,-9,]),'OP_OR':([2,4,5,6,7,8,9,11,12,13,16,17,18,20,21,22,23,24,37,45,48,60,68,69,70,71,72,73,74,75,76,77,78,80,81,82,83,84,85,86,87,88,89,],[-37,-4,-12,-40,-39,-38,-16,-32,-35,-8,-33,-6,47,-36,-26,-34,-14,-10,-41,-13,-15,-43,-3,-11,-42,-31,-28,-30,-29,-27,-7,-44,-5,-17,-21,-20,-22,-24,-18,-23,-19,-25,-9,]),'OP_EXISTS':([0,10,14,15,34,35,43,46,47,58,],[19,19,19,19,19,19,19,19,19,19,]),'OP_LIKE':([2,6,7,8,11,12,16,20,21,22,37,60,70,71,72,73,74,75,77,],[-37,-40,-39,-38,-32,-35,-33,-36,49,-34,-41,-43,-42,-31,-28,-30,-29,-27,-44,]),'CONSTANT':([0,3,10,14,15,19,34,35,38,39,40,41,42,43,46,47,49,50,51,52,53,54,55,56,57,58,59,61,62,63,64,65,66,67,],[6,27,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,27,27,27,27,27,27,27,27,]),'VARIABLE':([0,3,10,14,15,19,34,35,38,39,40,41,42,43,46,47,49,50,51,52,53,54,55,56,57,58,59,61,62,63,64,65,66,67,],[7,28,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,28,28,28,28,28,28,28,28,]),'TIMEDELTA':([0,3,10,14,15,19,34,35,38,39,40,41,42,43,46,47,49,50,51,52,53,54,55,56,57,58,59,61,62,63,64,65,66,67,],[20,30,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,30,30,30,30,30,30,30,30,]),'FLOAT':([0,3,10,14,15,19,34,35,38,39,40,41,42,43,46,47,49,50,51,52,53,54,55,56,57,58,59,61,62,63,64,65,66,67,],[8,29,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,29,29,29,29,29,29,29,29,]),'IPV6':([0,3,10,14,15,19,34,35,38,39,40,41,42,43,46,47,49,50,51,52,53,54,55,56,57,58,59,61,62,63,64,65,66,67,],[22,31,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,31,31,31,31,31,31,31,31,]),'OP_GT':([2,6,7,8,11,12,16,20,21,22,37,60,70,71,72,73,74,75,77,],[-37,-40,-39,-38,-32,-35,-33,-36,52,-34,-41,-43,-42,-31,-28,-30,-29,-27,-44,]),'DATETIME':([0,3,10,14,15,19,34,35,38,39,40,41,42,43,46,47,49,50,51,52,53,54,55,56,57,58,59,61,62,63,64,65,66,67,],[12,32,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,32,32,32,32,32,32,32,32,]),'COMMA':([25,27,28,29,30,31,32,33,],[59,61,62,63,64,65,66,67,]),'OP_NE':([2,6,7,8,11,12,16,20,21,22,37,60,70,71,72,73,74,75,77,],[-37,-40,-39,-38,-32,-35,-33,-36,50,-34,-41,-43,-42,-31,-28,-30,-29,-27,-44,]),'OP_AND':([2,5,6,7,8,9,11,12,13,16,17,20,21,22,23,24,37,45,48,60,69,70,71,72,73,74,75,76,77,80,81,82,83,84,85,86,87,88,89,],[-37,-12,-40,-39,-38,-16,-32,-35,-8,-33,46,-36,-26,-34,-14,-10,-41,-13,-15,-43,-11,-42,-31,-28,-30,-29,-27,-7,-44,-17,-21,-20,-22,-24,-18,-23,-19,-25,-9,]),'FUNCTION':([0,10,14,15,19,34,35,38,39,40,41,42,43,46,47,49,50,51,52,53,54,55,56,57,58,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'OP_LE':([2,6,7,8,11,12,16,20,21,22,37,60,70,71,72,73,74,75,77,],[-37,-40,-39,-38,-32,-35,-33,-36,57,-34,-41,-43,-42,-31,-28,-30,-29,-27,-44,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([0,10,14,47,],[1,36,44,79,]),'cmp_expression':([0,10,14,15,19,34,35,43,46,47,49,50,51,52,53,54,55,56,57,58,],[9,9,9,9,48,9,9,9,9,9,80,81,82,83,84,85,86,87,88,9,]),'xor_p_expression':([0,10,14,34,43,46,47,58,],[13,13,13,13,13,13,13,89,]),'xor_expression':([0,10,14,34,47,],[18,18,18,68,18,]),'list':([3,59,61,62,63,64,65,66,67,],[26,90,91,92,93,94,95,96,97,]),'and_p_expression':([0,10,14,34,35,43,46,47,58,],[24,24,24,24,69,24,24,24,24,]),'term':([0,10,14,15,19,34,35,38,39,40,41,42,43,46,47,49,50,51,52,53,54,55,56,57,58,],[21,21,21,21,21,21,21,71,72,73,74,75,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'factor':([0,10,14,15,19,34,35,38,39,40,41,42,43,46,47,49,50,51,52,53,54,55,56,57,58,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'not_expression':([0,10,14,34,35,43,46,47,58,],[5,5,5,5,5,5,5,5,5,]),'and_expression':([0,10,14,34,46,47,],[4,4,4,4,78,4,]),'ex_expression':([0,10,14,15,34,35,43,46,47,58,],[23,23,23,45,23,23,23,23,23,23,]),'or_p_expression':([0,10,14,34,43,46,47,],[17,17,17,17,76,17,17,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expression","S'",1,None,None,None),
  ('expression -> xor_expression OP_OR expression','expression',3,'p_expression','gparser.py',272),
  ('expression -> xor_expression','expression',1,'p_expression','gparser.py',273),
  ('xor_expression -> and_expression OP_XOR xor_expression','xor_expression',3,'p_xor_expression','gparser.py',281),
  ('xor_expression -> and_expression','xor_expression',1,'p_xor_expression','gparser.py',282),
  ('and_expression -> or_p_expression OP_AND and_expression','and_expression',3,'p_and_expression','gparser.py',290),
  ('and_expression -> or_p_expression','and_expression',1,'p_and_expression','gparser.py',291),
  ('or_p_expression -> xor_p_expression OP_OR_P or_p_expression','or_p_expression',3,'p_or_p_expression','gparser.py',299),
  ('or_p_expression -> xor_p_expression','or_p_expression',1,'p_or_p_expression','gparser.py',300),
  ('xor_p_expression -> and_p_expression OP_XOR_P xor_p_expression','xor_p_expression',3,'p_xor_p_expression','gparser.py',308),
  ('xor_p_expression -> and_p_expression','xor_p_expression',1,'p_xor_p_expression','gparser.py',309),
  ('and_p_expression -> not_expression OP_AND_P and_p_expression','and_p_expression',3,'p_and_p_expression','gparser.py',318),
  ('and_p_expression -> not_expression','and_p_expression',1,'p_and_p_expression','gparser.py',319),
  ('not_expression -> OP_NOT ex_expression','not_expression',2,'p_not_expression','gparser.py',327),
  ('not_expression -> ex_expression','not_expression',1,'p_not_expression','gparser.py',328),
  ('ex_expression -> OP_EXISTS cmp_expression','ex_expression',2,'p_ex_expression','gparser.py',336),
  ('ex_expression -> cmp_expression','ex_expression',1,'p_ex_expression','gparser.py',337),
  ('cmp_expression -> term OP_LIKE cmp_expression','cmp_expression',3,'p_cmp_expression','gparser.py',346),
  ('cmp_expression -> term OP_IN cmp_expression','cmp_expression',3,'p_cmp_expression','gparser.py',347),
  ('cmp_expression -> term OP_IS cmp_expression','cmp_expression',3,'p_cmp_expression','gparser.py',348),
  ('cmp_expression -> term OP_EQ cmp_expression','cmp_expression',3,'p_cmp_expression','gparser.py',349),
  ('cmp_expression -> term OP_NE cmp_expression','cmp_expression',3,'p_cmp_expression','gparser.py',350),
  ('cmp_expression -> term OP_GT cmp_expression','cmp_expression',3,'p_cmp_expression','gparser.py',351),
  ('cmp_expression -> term OP_GE cmp_expression','cmp_expression',3,'p_cmp_expression','gparser.py',352),
  ('cmp_expression -> term OP_LT cmp_expression','cmp_expression',3,'p_cmp_expression','gparser.py',353),
  ('cmp_expression -> term OP_LE cmp_expression','cmp_expression',3,'p_cmp_expression','gparser.py',354),
  ('cmp_expression -> term','cmp_expression',1,'p_cmp_expression','gparser.py',355),
  ('term -> factor OP_PLUS term','term',3,'p_term','gparser.py',363),
  ('term -> factor OP_MINUS term','term',3,'p_term','gparser.py',364),
  ('term -> factor OP_TIMES term','term',3,'p_term','gparser.py',365),
  ('term -> factor OP_DIVIDE term','term',3,'p_term','gparser.py',366),
  ('term -> factor OP_MODULO term','term',3,'p_term','gparser.py',367),
  ('term -> factor','term',1,'p_term','gparser.py',368),
  ('factor -> IPV4','factor',1,'p_factor','gparser.py',376),
  ('factor -> IPV6','factor',1,'p_factor','gparser.py',377),
  ('factor -> DATETIME','factor',1,'p_factor','gparser.py',378),
  ('factor -> TIMEDELTA','factor',1,'p_factor','gparser.py',379),
  ('factor -> INTEGER','factor',1,'p_factor','gparser.py',380),
  ('factor -> FLOAT','factor',1,'p_factor','gparser.py',381),
  ('factor -> VARIABLE','factor',1,'p_factor','gparser.py',382),
  ('factor -> CONSTANT','factor',1,'p_factor','gparser.py',383),
  ('factor -> FUNCTION RPAREN','factor',2,'p_factor','gparser.py',384),
  ('factor -> FUNCTION expression RPAREN','factor',3,'p_factor','gparser.py',385),
  ('factor -> LBRACK list RBRACK','factor',3,'p_factor','gparser.py',386),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor','gparser.py',387),
  ('list -> IPV4','list',1,'p_list','gparser.py',398),
  ('list -> IPV6','list',1,'p_list','gparser.py',399),
  ('list -> DATETIME','list',1,'p_list','gparser.py',400),
  ('list -> TIMEDELTA','list',1,'p_list','gparser.py',401),
  ('list -> INTEGER','list',1,'p_list','gparser.py',402),
  ('list -> FLOAT','list',1,'p_list','gparser.py',403),
  ('list -> VARIABLE','list',1,'p_list','gparser.py',404),
  ('list -> CONSTANT','list',1,'p_list','gparser.py',405),
  ('list -> IPV4 COMMA list','list',3,'p_list','gparser.py',406),
  ('list -> IPV6 COMMA list','list',3,'p_list','gparser.py',407),
  ('list -> DATETIME COMMA list','list',3,'p_list','gparser.py',408),
  ('list -> TIMEDELTA COMMA list','list',3,'p_list','gparser.py',409),
  ('list -> INTEGER COMMA list','list',3,'p_list','gparser.py',410),
  ('list -> FLOAT COMMA list','list',3,'p_list','gparser.py',411),
  ('list -> VARIABLE COMMA list','list',3,'p_list','gparser.py',412),
  ('list -> CONSTANT COMMA list','list',3,'p_list','gparser.py',413),
]
