{"version":3,"sources":["../../src/pages/login/login.module.ts","../../src/pages/login/authconfig.ts"],"names":[],"mappings":"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","file":"0.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { authConfig as config} from './authconfig';\nimport { Storage } from '@ionic/storage';\nimport { LoginPage } from './login';\nimport { AuthWellKnownEndpoints, OpenIDImplicitFlowConfiguration, OidcSecurityService } from 'angular-auth-oidc-client';\n\n@NgModule({\n  declarations: [\n    LoginPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(LoginPage),\n  ],\n  exports: [\n    LoginPage\n  ]\n})\nexport class LoginPageModule { \n  constructor(\n    private oidcSecurityService: OidcSecurityService\n) {\n        const openIDImplicitFlowConfiguration = new OpenIDImplicitFlowConfiguration();\n        openIDImplicitFlowConfiguration.stsServer = config.stsServer;\n        openIDImplicitFlowConfiguration.redirect_url = config.redirect_url;\n        openIDImplicitFlowConfiguration.trigger_authorization_result_event = true;\n        // The Client MUST validate that the aud (audience) Claim contains its client_id value registered at the Issuer\n        // identified by the iss (issuer) Claim as an audience.\n        // The ID Token MUST be rejected if the ID Token does not list the Client as a valid audience,\n        // or if it contains additional audiences not trusted by the Client.\n        openIDImplicitFlowConfiguration.client_id = config.client_id;\n        openIDImplicitFlowConfiguration.response_type = config.response_type;\n        openIDImplicitFlowConfiguration.scope = config.scope;\n        openIDImplicitFlowConfiguration.post_logout_redirect_uri = config.post_logout_redirect_uri;\n        openIDImplicitFlowConfiguration.start_checksession = typeof window !== 'undefined' ? config.start_checksession : false;\n        openIDImplicitFlowConfiguration.silent_renew = typeof window !== 'undefined' ? config.silent_renew : false;\n        openIDImplicitFlowConfiguration.silent_renew_url = config.silent_renew_url;\n        openIDImplicitFlowConfiguration.post_login_route = config.startup_route;\n        // HTTP 403\n        openIDImplicitFlowConfiguration.forbidden_route = config.forbidden_route;\n        // HTTP 401\n        openIDImplicitFlowConfiguration.unauthorized_route = config.unauthorized_route;\n        openIDImplicitFlowConfiguration.log_console_warning_active = config.log_console_warning_active;\n        openIDImplicitFlowConfiguration.log_console_debug_active = config.log_console_debug_active;\n        // id_token C8: The iat Claim can be used to reject tokens that were issued too far away from the current time,\n        // limiting the amount of time that nonces need to be stored to prevent attacks.The acceptable range is Client specific.\n        openIDImplicitFlowConfiguration.max_id_token_iat_offset_allowed_in_seconds = 20;\n        openIDImplicitFlowConfiguration.storage = localStorage;\n\n        const authWellKnownEndpoints = new AuthWellKnownEndpoints();\n        authWellKnownEndpoints.issuer = config.stsServer;\n        authWellKnownEndpoints.jwks_uri = `${config.stsServer}/.well-known/openid-configuration/jwks`;\n        authWellKnownEndpoints.authorization_endpoint = `${config.stsServer}/connect/authorize`;\n        authWellKnownEndpoints.token_endpoint = `${config.stsServer}/connect/token`;\n        authWellKnownEndpoints.userinfo_endpoint = `${config.stsServer}/connect/userinfo`;\n        authWellKnownEndpoints.end_session_endpoint = `${config.stsServer}/connect/endsession`;\n        authWellKnownEndpoints.check_session_iframe = `${config.stsServer}/connect/checksession`;\n        authWellKnownEndpoints.revocation_endpoint = `${config.stsServer}/connect/revocation`;\n        authWellKnownEndpoints.introspection_endpoint = `${config.stsServer}/connect/introspect`;\n        this.oidcSecurityService.setupModule(openIDImplicitFlowConfiguration, authWellKnownEndpoints);\n\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/login.module.ts","export const authConfig = {\n    stsServer: 'http://localhost:5000',\n    redirect_url: 'http://localhost:8100',\n    client_id: 'ionic_client',\n    response_type: 'id_token token',\n    scope: 'openid profile email',\n    post_logout_redirect_uri: 'http://localhost:8100',\n    start_checksession: true,\n    silent_renew: true,\n    silent_renew_url: 'http://localhost:8100/silent-renew.html',\n    startup_route: '/',\n    forbidden_route: '/',\n    unauthorized_route: '/',\n    log_console_warning_active: true,\n    log_console_debug_active: false,\n    max_id_token_iat_offset_allowed_in_seconds: '10',\n  }\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/authconfig.ts"],"sourceRoot":""}