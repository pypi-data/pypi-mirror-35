Metadata-Version: 2.1
Name: tf-ecosystem
Version: 1.0.6
Summary: A framework for initialising a terraform environment
Home-page: http://github.com/drewsonne/tf-ecosystem
Author: Drew J. Sonne
Author-email: drew.sonne@gmail.com
License: LGPLv2
Keywords: terraform cli
Platform: UNKNOWN
Classifier: Development Status :: 4 - Beta
Classifier: Environment :: Console
Classifier: License :: OSI Approved :: GNU Lesser General Public License v3 or later (LGPLv3+)
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Topic :: System
Classifier: Topic :: System :: Systems Administration
Requires-Python: >=3
Description-Content-Type: text/markdown
Requires-Dist: marshmallow
Requires-Dist: click
Requires-Dist: pyaml
Requires-Dist: termcolor

# tf-ecosystem
A tool for handling terraform deployments in a modular way

[![Build Status](https://travis-ci.com/drewsonne/tf-ecosystem.svg?branch=master)](https://travis-ci.com/drewsonne/tf-ecosystem)
[![codecov](https://codecov.io/gh/drewsonne/tf-ecosystem/branch/master/graph/badge.svg)](https://codecov.io/gh/drewsonne/tf-ecosystem)

## Quickstart

    $ pip install tf-ecosystem
    $ tf-eco init-stack --region eu-central-1 --environment live --stack help
    $ cat ~/.config/tf-ecosystem/config.ini
    $ cat _eco_override.tf

## Configuration Reference

### `facets`

Facets are variables used as required arguments and to describe the state path in an s3 backend.

#### `facets.state`
A list of facets strings

#### `facets.optional`
A subset of `facets.state` marking those facets as optional.

#### `facets.composite`

### `backend`

### `providers`

### `mappings`

A dictionary of dictionaries where each 


