"""Topologies representing asynchronous computations
====================================================

Topologies representing all steps to achieve a computation. A topology is composed
of a bunch of Queues and Works.  Queues are used to temporarily saved items (in
RAM). Works take a item in a queue, do the job and put the result in another
Queue.

All topologies inherit from a base. This base has the structure for defining
queues and works.  A topology can be represented as a graph. This graph can be
generated by calling the topology.make_code_graphviz(name) function and then by
typing the unix command::

  dot {name_file}.dot -Tpng -o {name_file}.png && eog {name_file}.png

.. autosummary::
   :toctree:

    base

Users are particularly concerned with the PIV and preprocessing topologies:

.. autosummary::
   :toctree:

    piv_new
    bos_new
    image2image_new

These others modules defined classes and functions useful for developers.

.. autosummary::
   :toctree:

    example

"""
