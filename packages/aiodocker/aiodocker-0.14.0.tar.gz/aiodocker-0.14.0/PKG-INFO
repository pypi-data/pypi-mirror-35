Metadata-Version: 1.2
Name: aiodocker
Version: 0.14.0
Summary: Docker API client for asyncio
Home-page: https://github.com/aio-libs/aiodocker
Author: Paul Tagliamonte
Author-email: paultag@debian.org
License: Apache 2
Description: ==============================
        AsyncIO bindings for docker.io
        ==============================
        
        .. image:: https://badge.fury.io/py/aiodocker.svg
           :target: https://badge.fury.io/py/aiodocker
           :alt: PyPI version
        
        .. image:: https://img.shields.io/pypi/pyversions/aiodocker.svg
           :target: https://pypi.org/project/aiodocker/
           :alt: Python Versions
        
        .. image:: https://travis-ci.org/aio-libs/aiodocker.svg?branch=master
           :target: https://travis-ci.org/aio-libs/aiodocker
           :alt: Build Status
        
        .. image:: https://codecov.io/gh/aio-libs/aiodocker/branch/master/graph/badge.svg
           :target: https://codecov.io/gh/aio-libs/aiodocker
           :alt: Code Coverage
        
        .. image:: https://badges.gitter.im/Join%20Chat.svg
            :target: https://gitter.im/aio-libs/Lobby
            :alt: Chat on Gitter
        
        A simple Docker HTTP API wrapper written with asyncio and aiohttp.
        
        
        Installation
        ============
        
        .. code-block:: sh
        
           pip install aiodocker
        
        Documentation
        =============
        
        http://aiodocker.readthedocs.io
        
        
        Examples
        ========
        
        .. code-block:: python
        
           import asyncio
           import aiodocker
        
           async def list_things():
               docker = aiodocker.Docker()
               print('== Images ==')
               for image in (await docker.images.list()):
                   tags = image['RepoTags'][0] if image['RepoTags'] else ''
                   print(image['Id'], tags)
               print('== Containers ==')
               for container in (await docker.containers.list()):
                   print(f" {container._id}")
               await docker.close()
        
           async def run_container():
               docker = aiodocker.Docker()
               print('== Running a hello-world container ==')
               container = await docker.containers.create_or_replace(
                   config={
                       'Cmd': ['/bin/ash', '-c', 'echo "hello world"'],
                       'Image': 'alpine:latest',
                   },
                   name='testing',
               )
               await container.start()
               logs = await container.log(stdout=True)
               print(''.join(logs))
               await container.delete(force=True)
               await docker.close()
        
           if __name__ == '__main__':
               loop = asyncio.get_event_loop()
               loop.run_until_complete(list_things())
               loop.run_until_complete(run_container())
               loop.close()
        
        =======
        Changes
        =======
        
        ..
            You should *NOT* be adding new change log entries to this file, this
            file is managed by towncrier. You *may* edit previous change logs to
            fix problems like typo corrections or such.
            To add a new change log entry, please see
            https://pip.pypa.io/en/latest/development/#adding-a-news-entry
            we named the news folder "changes".
        
        .. towncrier release notes start
        
        0.8.1 (2017-08-30)
        ==================
        
        Misc
        ----
        
        - #44, #46
        
        
        
Platform: any
Classifier: Development Status :: 4 - Beta
Classifier: License :: OSI Approved :: MIT License
Classifier: Intended Audience :: Developers
Classifier: Framework :: AsyncIO
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Classifier: Topic :: Software Development
Classifier: Framework :: AsyncIO
Requires-Python: >=3.5
