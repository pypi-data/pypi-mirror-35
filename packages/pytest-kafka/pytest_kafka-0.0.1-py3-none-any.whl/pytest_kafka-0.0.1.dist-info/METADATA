Metadata-Version: 2.1
Name: pytest-kafka
Version: 0.0.1
Summary: Zookeeper, Kafka server, and Kafka consumer fixtures for Pytest
Home-page: UNKNOWN
Author: Karoline Pauls
Author-email: code@karolinepauls.com
License: MIT
Platform: UNKNOWN
Classifier: Framework :: Pytest
Classifier: Topic :: Software Development :: Testing
Classifier: License :: OSI Approved :: BSD License
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Provides-Extra: dev
Requires-Dist: pytest
Requires-Dist: port-for (>=0.4)
Requires-Dist: kafka (>=1.3.5)
Provides-Extra: dev
Requires-Dist: flake8; extra == 'dev'
Requires-Dist: pyflakes (>=1.6.0); extra == 'dev'
Requires-Dist: flake8-docstrings; extra == 'dev'
Requires-Dist: flake8-tuple; extra == 'dev'
Requires-Dist: mypy; extra == 'dev'

pytest-kafka
============

Pytest fixture factories for Zookeeper, Kafka server and Kafka consumer.


.. code:: python

    zookeeper_proc = make_zookeeper_process(ZOOKEEPER_BIN)
    kafka_server = make_kafka_server(KAFKA_BIN, 'zookeeper_proc')
    kafka_consumer = make_kafka_consumer(
        'kafka_server', seek_to_beginning=True, kafka_topics=['topic'])


This creates 3 fixtures:

#. ``zookeeper_proc`` - Zookeeper process
#. ``kafka_server`` - Kafka process
#. ``kafka_consumer`` - usable ``kafka.KafkaConsumer`` instance


``ZOOKEEPER_BIN`` and ``KAFKA_BIN`` are paths to launch scripts in your Kafka distribution. Check
this project's setup.py to see a way of installing Kafka for development.

It's advised to pass ``seek_to_beginning=True`` because otherwise some messages may not be captured
by the consumer. This requires knowing the topics upfront because without topics there's no
partitions to seek.

It's possible to create multiple Kafka fixtures forming a cluster by passing the same Zookeeper
fixture to them. For an example, check the tests.

Session-scoped fixtures are also available. Consult the test suite.


System requirements
-------------------

- Python 3.5+
- JVM
- Kafka - https://kafka.apache.org/downloads


Development
-----------

Execute ``./setup.py develop`` in a virtualenv. This will take care of:

- installing dependencies
- updating pip
- installing dev dependencies
- installing Kafka to the project dir (for development only)


Acknowledgements
----------------

The library has been open-sourced from a codebase belonging to
`Infectious Media <https://infectiousmedia.com>`__.


