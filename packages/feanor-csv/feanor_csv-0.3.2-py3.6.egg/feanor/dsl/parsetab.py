
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "exprleft|left+left.DEFINE FLOAT IDENTIFIER IN INTEGER LET STRINGexpr : expr '|' choice\n            | expr '<' opt_literal expr_dispatcher\n            | choice\n            | call\n            | let_expr\n    expr_dispatcher :  '|' opt_literal '>' choice\n    choice : choice '+' term\n              | term\n    term : term '.' concatenandum\n            | concatenandum\n    concatenandum : concatenandum '_' index_or_indices\n                     | factor\n    index_or_indices : INTEGER\n                        | '(' numeric_list ')'\n    numeric_list : INTEGER\n                    | numeric_list ','\n                    | INTEGER ',' numeric_list\n    factor : type\n              | reference\n              | '(' expr ')' opt_assignment\n    type : '#' IDENTIFIER configreference : '@' IDENTIFIERcall : IDENTIFIER '(' exprlist ')'let_expr : LET defines_list IN exprdefines_list : IDENTIFIER DEFINE expr\n                    | IDENTIFIER DEFINE expr defines_list\n    config : dict_literal\n              | emptyopt_literal : literal\n                   | emptyliteral : dict_literal\n               | INTEGER\n               | FLOAT\n               | STRING\n    dict_literal : '{' keypair_list '}'keypair_list : empty\n                    | keypair\n                    | keypair ',' keypair_list\n    keypair : STRING ':' literalexprlist : empty\n                | expr\n                | expr ',' exprlist\n    opt_assignment : assign_name\n                      | emptyassign_name : '=' IDENTIFIERempty :"
    
_lr_action_items = {'IDENTIFIER':([0,2,3,4,5,7,8,9,10,11,12,13,14,19,24,25,26,35,36,40,41,42,43,44,46,47,48,49,55,56,57,58,59,60,61,62,66,70,72,79,],[6,-3,-4,-5,-8,6,22,-10,-12,-18,-19,24,25,6,-46,-22,-1,-7,-9,-46,6,6,-11,-13,-21,-27,-28,-2,-23,6,-20,-43,-44,70,-24,22,-35,-45,-14,-6,]),'LET':([0,7,19,41,42,56,],[8,8,8,8,8,8,]),'(':([0,6,7,15,17,18,19,23,41,42,56,75,],[7,19,7,7,7,7,7,45,7,7,7,7,]),'#':([0,7,15,17,18,19,41,42,56,75,],[13,13,13,13,13,13,13,13,13,13,]),'@':([0,7,15,17,18,19,41,42,56,75,],[14,14,14,14,14,14,14,14,14,14,]),'$end':([1,2,3,4,5,9,10,11,12,24,25,26,35,36,40,43,44,46,47,48,49,55,57,58,59,61,66,70,72,79,],[0,-3,-4,-5,-8,-10,-12,-18,-19,-46,-22,-1,-7,-9,-46,-11,-13,-21,-27,-28,-2,-23,-20,-43,-44,-24,-35,-45,-14,-6,]),'|':([1,2,3,4,5,9,10,11,12,16,20,24,25,26,27,28,29,30,31,32,33,35,36,39,40,43,44,46,47,48,49,55,57,58,59,61,62,66,70,72,79,],[15,-3,-4,-5,-8,-10,-12,-18,-19,-46,15,-46,-22,-1,50,-29,-30,-31,-32,-33,-34,-7,-9,15,-46,-11,-13,-21,-27,-28,-2,-23,-20,-43,-44,15,15,-35,-45,-14,-6,]),'<':([1,2,3,4,5,9,10,11,12,20,24,25,26,35,36,39,40,43,44,46,47,48,49,55,57,58,59,61,62,66,70,72,79,],[16,-3,-4,-5,-8,-10,-12,-18,-19,16,-46,-22,-1,-7,-9,16,-46,-11,-13,-21,-27,-28,-2,-23,-20,-43,-44,16,16,-35,-45,-14,-6,]),')':([2,3,4,5,9,10,11,12,19,20,24,25,26,35,36,37,38,39,40,43,44,46,47,48,49,55,56,57,58,59,61,63,64,66,69,70,72,73,78,79,],[-3,-4,-5,-8,-10,-12,-18,-19,-46,40,-46,-22,-1,-7,-9,55,-40,-41,-46,-11,-13,-21,-27,-28,-2,-23,-46,-20,-43,-44,-24,72,-15,-35,-42,-45,-14,-16,-17,-6,]),',':([2,3,4,5,9,10,11,12,24,25,26,30,31,32,33,35,36,39,40,43,44,46,47,48,49,53,55,57,58,59,61,63,64,66,70,72,73,77,78,79,],[-3,-4,-5,-8,-10,-12,-18,-19,-46,-22,-1,-31,-32,-33,-34,-7,-9,56,-46,-11,-13,-21,-27,-28,-2,67,-23,-20,-43,-44,-24,73,74,-35,-45,-14,-16,-39,73,-6,]),'IN':([2,3,4,5,9,10,11,12,21,24,25,26,35,36,40,43,44,46,47,48,49,55,57,58,59,61,62,66,70,71,72,79,],[-3,-4,-5,-8,-10,-12,-18,-19,41,-46,-22,-1,-7,-9,-46,-11,-13,-21,-27,-28,-2,-23,-20,-43,-44,-24,-25,-35,-45,-26,-14,-6,]),'+':([2,5,9,10,11,12,24,25,26,35,36,40,43,44,46,47,48,57,58,59,66,70,72,79,],[17,-8,-10,-12,-18,-19,-46,-22,17,-7,-9,-46,-11,-13,-21,-27,-28,-20,-43,-44,-35,-45,-14,17,]),'.':([5,9,10,11,12,24,25,35,36,40,43,44,46,47,48,57,58,59,66,70,72,],[18,-10,-12,-18,-19,-46,-22,18,-9,-46,-11,-13,-21,-27,-28,-20,-43,-44,-35,-45,-14,]),'_':([9,10,11,12,24,25,36,40,43,44,46,47,48,57,58,59,66,70,72,],[23,-12,-18,-19,-46,-22,23,-46,-11,-13,-21,-27,-28,-20,-43,-44,-35,-45,-14,]),'INTEGER':([16,23,45,50,68,74,],[31,44,64,31,31,64,]),'FLOAT':([16,50,68,],[32,32,32,]),'STRING':([16,34,50,67,68,],[33,54,33,54,33,]),'{':([16,24,50,68,],[34,34,34,34,]),'DEFINE':([22,],[42,]),'>':([28,29,30,31,32,33,50,65,66,],[-29,-30,-31,-32,-33,-34,-46,75,-35,]),'}':([30,31,32,33,34,51,52,53,66,67,76,77,],[-31,-32,-33,-34,-46,66,-36,-37,-35,-46,-38,-39,]),'=':([40,],[60,]),':':([54,],[68,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expr':([0,7,19,41,42,56,],[1,20,39,61,62,39,]),'choice':([0,7,15,19,41,42,56,75,],[2,2,26,2,2,2,2,79,]),'call':([0,7,19,41,42,56,],[3,3,3,3,3,3,]),'let_expr':([0,7,19,41,42,56,],[4,4,4,4,4,4,]),'term':([0,7,15,17,19,41,42,56,75,],[5,5,5,35,5,5,5,5,5,]),'concatenandum':([0,7,15,17,18,19,41,42,56,75,],[9,9,9,9,36,9,9,9,9,9,]),'factor':([0,7,15,17,18,19,41,42,56,75,],[10,10,10,10,10,10,10,10,10,10,]),'type':([0,7,15,17,18,19,41,42,56,75,],[11,11,11,11,11,11,11,11,11,11,]),'reference':([0,7,15,17,18,19,41,42,56,75,],[12,12,12,12,12,12,12,12,12,12,]),'defines_list':([8,62,],[21,71,]),'opt_literal':([16,50,],[27,65,]),'literal':([16,50,68,],[28,28,77,]),'empty':([16,19,24,34,40,50,56,67,],[29,38,48,52,59,29,38,52,]),'dict_literal':([16,24,50,68,],[30,47,30,30,]),'exprlist':([19,56,],[37,69,]),'index_or_indices':([23,],[43,]),'config':([24,],[46,]),'expr_dispatcher':([27,],[49,]),'keypair_list':([34,67,],[51,76,]),'keypair':([34,67,],[53,53,]),'opt_assignment':([40,],[57,]),'assign_name':([40,],[58,]),'numeric_list':([45,74,],[63,78,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expr","S'",1,None,None,None),
  ('expr -> expr | choice','expr',3,'p_expr','_parser_rules.py',15),
  ('expr -> expr < opt_literal expr_dispatcher','expr',4,'p_expr','_parser_rules.py',16),
  ('expr -> choice','expr',1,'p_expr','_parser_rules.py',17),
  ('expr -> call','expr',1,'p_expr','_parser_rules.py',18),
  ('expr -> let_expr','expr',1,'p_expr','_parser_rules.py',19),
  ('expr_dispatcher -> | opt_literal > choice','expr_dispatcher',4,'p_expr_dispatcher','_parser_rules.py',32),
  ('choice -> choice + term','choice',3,'p_choice','_parser_rules.py',38),
  ('choice -> term','choice',1,'p_choice','_parser_rules.py',39),
  ('term -> term . concatenandum','term',3,'p_term','_parser_rules.py',48),
  ('term -> concatenandum','term',1,'p_term','_parser_rules.py',49),
  ('concatenandum -> concatenandum _ index_or_indices','concatenandum',3,'p_concatenandum','_parser_rules.py',58),
  ('concatenandum -> factor','concatenandum',1,'p_concatenandum','_parser_rules.py',59),
  ('index_or_indices -> INTEGER','index_or_indices',1,'p_index_or_indices','_parser_rules.py',68),
  ('index_or_indices -> ( numeric_list )','index_or_indices',3,'p_index_or_indices','_parser_rules.py',69),
  ('numeric_list -> INTEGER','numeric_list',1,'p_numeric_list','_parser_rules.py',79),
  ('numeric_list -> numeric_list ,','numeric_list',2,'p_numeric_list','_parser_rules.py',80),
  ('numeric_list -> INTEGER , numeric_list','numeric_list',3,'p_numeric_list','_parser_rules.py',81),
  ('factor -> type','factor',1,'p_factor','_parser_rules.py',91),
  ('factor -> reference','factor',1,'p_factor','_parser_rules.py',92),
  ('factor -> ( expr ) opt_assignment','factor',4,'p_factor','_parser_rules.py',93),
  ('type -> # IDENTIFIER config','type',3,'p_type','_parser_rules.py',102),
  ('reference -> @ IDENTIFIER','reference',2,'p_reference','_parser_rules.py',107),
  ('call -> IDENTIFIER ( exprlist )','call',4,'p_call','_parser_rules.py',112),
  ('let_expr -> LET defines_list IN expr','let_expr',4,'p_let_expr','_parser_rules.py',118),
  ('defines_list -> IDENTIFIER DEFINE expr','defines_list',3,'p_defines_list','_parser_rules.py',124),
  ('defines_list -> IDENTIFIER DEFINE expr defines_list','defines_list',4,'p_defines_list','_parser_rules.py',125),
  ('config -> dict_literal','config',1,'p_config','_parser_rules.py',135),
  ('config -> empty','config',1,'p_config','_parser_rules.py',136),
  ('opt_literal -> literal','opt_literal',1,'p_opt_literal','_parser_rules.py',141),
  ('opt_literal -> empty','opt_literal',1,'p_opt_literal','_parser_rules.py',142),
  ('literal -> dict_literal','literal',1,'p_literal','_parser_rules.py',147),
  ('literal -> INTEGER','literal',1,'p_literal','_parser_rules.py',148),
  ('literal -> FLOAT','literal',1,'p_literal','_parser_rules.py',149),
  ('literal -> STRING','literal',1,'p_literal','_parser_rules.py',150),
  ('dict_literal -> { keypair_list }','dict_literal',3,'p_dict_literal','_parser_rules.py',156),
  ('keypair_list -> empty','keypair_list',1,'p_keypair_list','_parser_rules.py',162),
  ('keypair_list -> keypair','keypair_list',1,'p_keypair_list','_parser_rules.py',163),
  ('keypair_list -> keypair , keypair_list','keypair_list',3,'p_keypair_list','_parser_rules.py',164),
  ('keypair -> STRING : literal','keypair',3,'p_keypair','_parser_rules.py',174),
  ('exprlist -> empty','exprlist',1,'p_exprlist','_parser_rules.py',179),
  ('exprlist -> expr','exprlist',1,'p_exprlist','_parser_rules.py',180),
  ('exprlist -> expr , exprlist','exprlist',3,'p_exprlist','_parser_rules.py',181),
  ('opt_assignment -> assign_name','opt_assignment',1,'p_opt_assignment','_parser_rules.py',191),
  ('opt_assignment -> empty','opt_assignment',1,'p_opt_assignment','_parser_rules.py',192),
  ('assign_name -> = IDENTIFIER','assign_name',2,'p_assign_name','_parser_rules.py',197),
  ('empty -> <empty>','empty',0,'p_empty','_parser_rules.py',202),
]
