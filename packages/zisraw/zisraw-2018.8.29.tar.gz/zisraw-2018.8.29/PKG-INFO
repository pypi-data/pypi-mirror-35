Metadata-Version: 1.2
Name: zisraw
Version: 2018.8.29
Summary: Read Carl Zeiss(r) ZISRAW (CZI) files
Home-page: https://www.lfd.uci.edu/~gohlke/
Author: Christoph Gohlke
Author-email: cgohlke@uci.edu
License: BSD
Description: Read Carl Zeiss(r) ZISRAW (CZI) files
        =====================================
        
        CZI is the native image file format of the ZEN(r) software by Carl Zeiss
        Microscopy GmbH. It stores multidimensional images and metadata from
        microscopy experiments.
        
        :Author:
          `Christoph Gohlke <https://www.lfd.uci.edu/~gohlke/>`_
        
        :Organization:
          Laboratory for Fluorescence Dynamics. University of California, Irvine
        
        :Version: 2018.8.29
        
        Requirements
        ------------
        * `CPython 2.7 or 3.5+ <https://www.python.org>`_
        * `Numpy 1.14 <https://www.numpy.org>`_
        * `Scipy 1.1 <https://www.scipy.org>`_
        * `Tiffile 2018.8.29 <https://www.lfd.uci.edu/~gohlke/>`_
        * `Imagecodecs 2018.8.29 <https://www.lfd.uci.edu/~gohlke/>`_
        
        Revisions
        ---------
        2018.8.29
            Move czifile.py and related modules into zisraw package.
            Move usage examples to main docstring.
            Require imagecodecs package for decoding JpegXrFile, JpgFile, and LZW.
        2018.6.18
            Save CZI metadata to TIFF description in czi2tif.
            Fix AttributeError using max_workers=1.
            Make Segment.SID and DimensionEntryDV1.dimension str types.
            Return metadata as XML unicode string or dict, not etree.
            Return timestamps, focus positions, events, and luts as tuple or ndarray
        2017.7.21
            Use multi-threading in CziFile.asarray to decode and copy segment data.
            Always convert BGR to RGB. Remove bgr2rgb options.
            Decode JpegXR directly from byte arrays.
        2017.7.13
            Add function to convert CZI file to memory-mappable TIFF file.
        2017.7.11
            Add 'out' parameter to CziFile.asarray.
            Remove memmap option from CziFile.asarray (backwards incompatible).
            Change spline interpolation order to 0 (backwards incompatible).
            Make axes return a string.
            Require tifffile 2017.7.11.
        2014.10.10
            Read data into a memory mapped array (optional).
        2013.12.4
            Decode JpegXrFile and JpgFile via _czifle extension module.
            Attempt to reconstruct tiled mosaic images.
        2013.11.20
            Initial release.
        
        Notes
        -----
        The API is not stable yet and might change between revisions.
        
        Python 2.7 and 3.4 are deprecated.
        
        The file format design specification [1] is confidential and the licence
        agreement does not permit to write data into CZI files.
        
        Only a subset of the 2016 specification is implemented. Specifically,
        multifile images, image pyramids, and topography images are not yet supported.
        
        Tested on Windows with a few example files only.
        
        References
        ----------
        (1) ZISRAW (CZI) File Format Design specification Release Version 1.2.2.
            CZI 07-2016/CZI-DOC ZEN 2.3/DS_ZISRAW-FileFormat.pdf (confidential).
            Documentation can be requested at
            <http://microscopy.zeiss.com/microscopy/en_us/downloads/zen.html>
        (2) CZI The File Format for the Microscope | ZEISS International
            <http://microscopy.zeiss.com/microscopy/en_us/products/microscope-software/
            zen-2012/czi.html>
        
        Examples
        --------
        
        Read image data from a CZI file as numpy array:
        
        >>> image = imread('test.czi')
        >>> image.shape
        (3, 3, 3, 250, 200, 3)
        >>> image[0, 0, 0, 0, 0]
        array([10, 10, 10], dtype=uint8)
        
Platform: any
Classifier: Development Status :: 3 - Alpha
Classifier: License :: OSI Approved :: BSD License
Classifier: Intended Audience :: Science/Research
Classifier: Intended Audience :: Developers
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 2
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.4
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Requires-Python: >=2.7
