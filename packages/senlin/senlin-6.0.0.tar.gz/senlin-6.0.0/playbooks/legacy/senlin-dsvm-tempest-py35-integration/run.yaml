- hosts: all
  name: gate-senlin-dsvm-tempest-py35-integration-nv
  tasks:

    - name: Ensure legacy workspace directory
      file:
        path: '{{ ansible_user_dir }}/workspace'
        state: directory

    - shell:
        cmd: |
          set -e
          set -x
          cat > clonemap.yaml << EOF
          clonemap:
            - name: openstack-infra/devstack-gate
              dest: devstack-gate
          EOF
          /usr/zuul-env/bin/zuul-cloner -m clonemap.yaml --cache-dir /opt/git \
              git://git.openstack.org \
              openstack-infra/devstack-gate
        executable: /bin/bash
        chdir: '{{ ansible_user_dir }}/workspace'
      environment: '{{ zuul | zuul_legacy_vars }}'

    - shell:
        cmd: |
          set -e
          set -x

          export PYTHONUNBUFFERED=True
          export DEVSTACK_GATE_NEUTRON=1
          export DEVSTACK_GATE_TEMPEST=1
          export DEVSTACK_GATE_TEMPEST_NOTESTS=1
          export DEVSTACK_GATE_EXERCISES=0
          export DEVSTACK_GATE_INSTALL_TESTONLY=1
          export KEEP_LOCALRC=1

          export DEVSTACK_GATE_USE_PYTHON3=True

          export SENLIN_TEST_TYPE="integration"
          export SENLIN_BACKEND="openstack"
          export DEVSTACK_GATE_TEMPEST_REGEX="senlin_tempest_plugin.tests.integration"

          services=rabbit,mysql,dstat,key,tempest
          services+=,g-api,g-reg
          services+=,n-api,n-cpu,n-cond,n-sch,n-crt
          if [[ "stable/newton" != $ZUUL_BRANCH ]]; then
             services+=,placement-api,placement-client
          fi
          # services+=,c-sch,c-api,c-vol,c-bak
          services+=,q-svc,q-dhcp,q-meta,q-agt,q-l3

          export PROJECTS="openstack/senlin $PROJECTS"
          export DEVSTACK_LOCAL_CONFIG="enable_plugin senlin https://git.openstack.org/openstack/senlin"

          export PROJECTS="openstack/heat $PROJECTS"
          export DEVSTACK_LOCAL_CONFIG+=$'\n'"enable_plugin heat git://git.openstack.org/openstack/heat"

          # Enable LBaaS V2 plugin
          services+=,q-lbaasv2
          export PROJECTS="openstack/neutron-lbaas $PROJECTS"
          export DEVSTACK_LOCAL_CONFIG+=$'\n'"enable_plugin neutron-lbaas https://git.openstack.org/openstack/neutron-lbaas"

          # Enable Zaqar
          export PROJECTS="openstack/zaqar $PROJECTS"
          export PROJECTS="openstack/python-zaqarclient $PROJECTS"
          export PROJECTS="openstack/zaqar-ui $PROJECTS"
          export DEVSTACK_LOCAL_CONFIG+=$'\n'"enable_plugin zaqar git://git.openstack.org/openstack/zaqar"
          export PROJECTS="openstack/zaqar-tempest-plugin $PROJECTS"
          export DEVSTACK_LOCAL_CONFIG+=$'\n'"TEMPEST_PLUGINS+=' /opt/stack/new/zaqar-tempest-plugin'"

          # use senlin-tempest-plugin
          export PROJECTS="openstack/senlin-tempest-plugin $PROJECTS"
          export DEVSTACK_LOCAL_CONFIG+=$'\n'"TEMPEST_PLUGINS+=' /opt/stack/new/senlin-tempest-plugin'"

          export OVERRIDE_ENABLED_SERVICES=$services

          if [ "$BRANCH_OVERRIDE" != "default" ] ; then
              export OVERRIDE_ZUUL_BRANCH=$BRANCH_OVERRIDE
          fi

          function pre_test_hook {
              cd /opt/stack/new/senlin/senlin/tests/tempest/
              source ./pre_test_hook.sh
          }
          export -f pre_test_hook

          function post_test_hook {
              cd /opt/stack/new/senlin/senlin/tests/tempest/
              source ./post_test_hook.sh
          }
          export -f post_test_hook

          cp devstack-gate/devstack-vm-gate-wrap.sh ./safe-devstack-vm-gate-wrap.sh
          ./safe-devstack-vm-gate-wrap.sh
        executable: /bin/bash
        chdir: '{{ ansible_user_dir }}/workspace'
      environment: '{{ zuul | zuul_legacy_vars }}'
