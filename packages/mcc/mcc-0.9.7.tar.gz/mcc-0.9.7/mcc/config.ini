# CONFIG FILE CONTAINING LIST OF CLOUD PROVIDERS & CREDENTIALS

# MISC NOTES:
#   Do NOT use "" around values
#   Do NOT change the entry names (left side of = sign)
#   Change the entry values (right side of = sign) to match your credentials
#   You may remove comment lines (lines starting with #)


# 'INFO' SECTION AND 'PROVIDERS' LIST
#  - There must be a section named [info] and it must contain an entry named providers
#
#  - providers is a list of the cloud providers the app should connect to
#    - ONLY include providers you have credentials for AND want to use
#    - you must use the exact values listed to reference the providers:
#      - "alicloud", "aws", "azure", and "gcp"
#    - multiple accounts for a provider is specified by adding a second entry to providers
#      - begin the second entry with the provider name: alicloud, aws, azure, gcp
#      - end it with a numeric suffix
#      - example: aws2 specifies a 2nd AWS account
#      - only include the provider name followed by numbers
#        - otherwise it will fail to be recognized


[info]
# Example that specifies an account for all supported providers
providers = alicloud,aws,azure,gcp

# Example specifying two aws accounts and one azure account:
# providers = aws,aws2,azure


# CREDENTIALS DATA SECTIONS
#  - each entry in the providers setting must have a section of the same name that contains the authentication credentials for that provider account
#  - the specific settings for each provider are described in the sections below
#  - if multiple accounts for one provider are specified in the providers setting
#    - a separate section for each account must be included
#    - example: if "providers = aws,aws2,azure" specified
#      - then sections name [aws], [aws2], and [azure] must be included


# [alicloud] SECTION REQUIRED if alicloud is listed in providers

[alicloud]
ali_region = cn-hangzhou 
ali_access_key_id = EXCEWDYSWRP7VZOW
ali_access_key_secret = CHVsdhV+YgBEjJuZsJNstLGgRY43kZggNHQ


# [aws] SECTION REQUIRED if aws is listed in providers

[aws]
aws_access_key_id = EXCEWDYSWRP7VZOW4VAW
aws_secret_access_key = CHVsdhV+YgBEjJuZsJNstLGgRY43kZggNHQEh/JK
aws_default_region = us-west-1


# [azure] SECTION REQUIRED if azure is listed in providers

[azure]
az_tenant_id = a3b7de99-6c36-e71f-e7d7-c5a1eefd9c01
az_sub_id = 2ac1b147-fdca-947c-4907-3f302a667100
az_app_id = ee16ad1d-d266-bffa-031c-008ab40d971e
az_app_sec = 22918C9e1cCC7665a+b3e4052f942630aE979CF68/v=


# [gcp] SECTION REQUIRED if gcp is listed in providers

# GCP allows two authentication methods: Service-Account and Application

# GCP Service Account Authentication (default)
#   This auth type requires copying the key-file (json file) to the mcc config dir
[gcp]
gcp_proj_id = sampleproject-634368
gcp_svc_acct_email = 12345678911-compute@developer.gserviceaccount.com
gcp_pem_file = SampleProject-72fcfdb29717.json

# GCP Application Authentication
#  This requires adding the line `gcp_auth_type = A` as shown below

# [gcp]
# gcp_auth_type = A
# gcp_proj_id = sampleproject-634368
# gcp_client_id = 12345678911-LZXcWZmyzU3v3qNPPJNEimoKgh9Wruo4.apps.googleusercontent.com
# gcp_client_sec = t4ugvWTocssrVtX448tDEWBW

#  When using Application Authentication:
#   - The first time the program is run:
#     - A URL is displayed in the terminal session
#     - this URL must be opened in a web-browser where an access-code is displayed
#     - copy the code from the web browser and paste it into the terminal session
#     - GCP will then authenticate mcc, and normal execution will continue
