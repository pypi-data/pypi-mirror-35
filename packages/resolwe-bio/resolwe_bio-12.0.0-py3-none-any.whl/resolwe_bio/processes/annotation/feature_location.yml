# =====================================
# GTF/GFF processing - Feature Location
# =====================================
---

- slug: feature_location
  name: Feature locations
  requirements:
    expression-engine: jinja
    executor:
      docker:
        image: resolwebio/legacy:1.0.0
  data_name: "Extract feature locations"
  version: 1.1.0
  type: data:featurelocation
  category: analyses
  persistence: CACHED
  description: >
    Extract feature locations from annotation (GFF/GTF) files.
  input:
    - name: annotation
      label: Annotation file
      type: data:annotation
    - name: feature_type
      label: Feature type
      type: basic:string
      default: transcript
      choices:
        - label: mRNA
          value: mRNA
        - label: transcript
          value: transcript
        - label: gene
          value: gene
        - label: exon
          value: exon
      description: >
        Feature type as it appears in the 3rd column of the annotation file. Select "transcript" for typical Ensembl or Gencode provided annotation files. Select "exons" together with "Assemble exons to transcripts" option for UCSC annotations (i.e. mm10). Use "mRNA" for the D. discoideum annotation file.
    - name: id_type
      label: ID type
      type: basic:string
      default: transcript_id
      choices:
        - label: transcript_id
          value: transcript_id
        - label: gene_id
          value: gene_id
        - label: ID
          value: ID
        - label: Parent
          value: Parent
      description: >
        ID type of the annotation feature to be extracted (as it appears in the 8th column of the annotation file). Select "trancript_id" for the typical Ensembl/Gencode/UCSC provided annotation file. Select "ID" for the D. discoideum annotation file.
    - name: summarize_exons
      label: Assemble exons to transcripts
      type: basic:boolean
      default: false
      description: >
        Assemble exons that match common "transcript_id" into transcripts (For example, when using mm10 annotation, select "Feature type" = exon, "ID type" = transcript_id, and check the "Asseble exons to transcript" option)
  output:
    - name: feature_location
      label: Feature locations (JSON)
      type: basic:json
  run:
    runtime: polyglot
    language: bash
    program: |
      feature_location.py --annotation {{annotation.annot.file}} --feature_type {{feature_type}} --id_type {{id_type}} {% if summarize_exons %} --summarize_exons {% endif %}
      re-checkrc "Parsing of annotation file failed."
