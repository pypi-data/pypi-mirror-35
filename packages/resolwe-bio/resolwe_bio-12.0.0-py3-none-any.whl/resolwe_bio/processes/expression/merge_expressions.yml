# =================
# Merge Expressions
# =================
---

- slug: mergeexpressions
  name: Merge Expressions
  requirements:
    expression-engine: jinja
    executor:
      docker:
        image: resolwebio/legacy:1.0.0
  data_name: "Merged expressions"
  version: 1.0.11
  type: data:expressionset
  category: analyses
  persistence: CACHED
  description: >
    Merge expression data and filter genes.
  input:
    - name: exps
      label: Gene expressions
      type: list:data:expression
    - name: genes
      label: Filter genes
      type: list:basic:string
      required: false
      default: ['DDB_G0267184', 'DDB_G0267188', 'DDB_G0267204']
  output:
    - name: expset
      label: Expression set
      type: basic:file
    - name: expset_type
      label: Expression set type
      type: basic:string
  run:
    runtime: polyglot
    language: bash
    program: |
      EXPSET_TYPE={{ exps.0.exp_type }}

      {% for e in exps %}
        {% if (exps|first).exp_type != e.exp_type %}
          re-warning "Expressions must be of the same expression type"
          re-error "Expression {{ exps|first|name }} has expression type {{ (exps|first).exp_type }}, while expression {{ e|name }} has expression type {{ e.exp_type }}"
        {% endif %}
      {% endfor %}

      expressionmerge.py {% for e in exps %}{{e.exp.file}} {% endfor %} --experiments {% for e in exps %}{{e|name}} {% endfor %} {% if genes %}--genes {% for g in genes %}{{g}} {% endfor %}{% endif %} --intersection --out 'sample.tab'
      re-checkrc
      re-save expset_type "$EXPSET_TYPE"
      re-save-file expset sample.tab
